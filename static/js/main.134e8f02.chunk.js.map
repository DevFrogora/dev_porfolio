{"version":3,"sources":["components/Navbar.js","components/personalDataContext.js","components/pages/About/HeaderForAbout.js","components/pages/About.js","components/pages/Template/InlineImageText.js","components/pages/Home.js","components/pages/Projects/RepoDivCard.js","components/pages/Projects/Languages.js","components/pages/Projects/CardDiv.js","components/pages/Projects/PorjectPreview/UnityPreviewTable.jsx","components/pages/Projects/ProjectRepo.js","components/pages/Projects.js","components/pages/Experience/ExperienceTemplate/ExperienceLayout.js","components/pages/Experience.js","components/pages/Contact/ContactMetaData.js","components/pages/Contact.js","components/pages/Resume.js","components/pages/httpRequest/ServletGetRequest.js","components/pages/adminpanel/TextBoxWithInputField.js","components/pages/adminpanel/MyDataConfig.js","components/pages/adminpanel/MessageTemplate.js","components/pages/adminpanel/ContactMessages.js","components/pages/adminpanel/CanContact.js","components/pages/adminpanel/AdminSetting.js","components/pages/adminpanel/Admin.js","App.js","index.js","components/navStyle.module.css","components/pages/Experience/ExperienceTemplate/experienceLayout.module.css"],"names":["Navbar","linkStyle","color","padding","textDecoration","borderRadius","activeStyle","fontWeight","backgroundColor","classname","navStyle","links","to","style","className","logo","forMobile","dropdown","dropbtn","dropdown_content","exact","navItem","Component","PersonalDataContext","React","createContext","PersonalDataProvider","Provider","PersonalDataConsumer","Consumer","HeaderForAbout","href","src","process","alt","JsonData","name","About","InlineImageText","this","props","imageLink","text","width","height","redirectLink","children","Home","RepoDivCard","Username","Repo","Languages","language","CardDiv","languagelist","projLanguages","forEach","push","projCoverImageLink","projName","projDescription","projExecutableLink","projSourceLink","projDocsLink","UnityPreviewTable","useState","GifData","setGifData","search","setSearch","filterGifData","setfilterGifData","columns","selector","row","title","sortable","link","loading","useEffect","a","axios","get","response","data","console","log","result","filter","eachGifData","toLowerCase","match","pagination","fixedHeader","fixedHeaderScrollHeight","highlightOnHover","subHeader","subHeaderComponent","type","placeholder","value","onChange","e","target","json","JSON","parse","stringify","projectlist","projectId","projectName","projectDescription","projectLanguages","projectExecutableLink","projectSourceLink","projectDocsLink","projectCoverImageLink","ProjectRepo","username","map","project","Projects","jobsList","buttonList","Experience","ContactMetaData","handleOnChange","setTimeout","then","respObj","setState","totalCount","pendingCount","falseCount","canContact","catch","state","mounted","PureComponent","Contact","handleUsernameChange","event","handleEmailChange","email","handleMessageChange","message","handleMsgTypeChange","message_type","handleSubmit","alert","prevState","form_status","form_status_message","post","headers","preventDefault","handleToRefresh","child","current","createRef","ref","onSubmit","onClick","Resume","handleDownloadingPDF","navElement","document","getElementsByTagName","i","length","display","phoneNumber","prompt","getElementById","innerHTML","window","print","id","textAlign","colspan","request","XMLHttpRequest","addEventListener","readyState","responseText","TextBoxWithInputField","setStateOfParent","currentWorking","MyDataConfig","handleOnClick","jsonObject","context","contextType","MessageTemplate","handleOnDone","date","Refresh","handleOnDelete","TimeStamp","Date","Message","ContactMessages","handleOnRefresh","handleOnToggleShow","pending","dateTimeString","toLocaleDateString","toLocaleTimeString","CanContact","toggleChange","isChecked","answer","postReq","setData","contact","defaultChecked","AdminSetting","Admin","handlePasswordChange","password","App","PersonalDetails","path","component","ReactDOM","render","module","exports"],"mappings":"qPA+DeA,E,4JAzDX,WACI,IAAMC,EAAY,CACdC,MAAO,QACPC,QAAS,SACTC,eAAgB,OAChBC,aAAc,QAEZC,EAAc,CAChBC,WAAY,OACZL,MAAO,MACPM,gBAAiB,SAEjBC,EAAYC,IAASC,MAAQ,WACjC,OACI,8BACI,gCACI,cAAC,IAAD,CAAMC,GAAG,gBAAgBC,MAAOZ,EAAhC,SACI,qBAAKa,UAAWJ,IAASK,KAAzB,SAA+B,mDAEnC,qBAAID,UAAWL,EAAf,UACI,oBAAIK,UAAWJ,IAASM,UAAxB,SACA,sBAAKF,UAAWJ,IAASO,SAAzB,UACI,qBAAKH,UAAWJ,IAASQ,QAAzB,kBAEA,sBAAKJ,UAAWJ,IAASS,iBAAzB,UACA,eAAC,IAAD,CAAUP,GAAG,SAAb,cAAuB,8CAAvB,UACA,eAAC,IAAD,CAAUA,GAAG,cAAb,cAA4B,mDAA5B,UACA,eAAC,IAAD,CAAUA,GAAG,YAAb,cAA0B,8CAA1B,SACA,eAAC,IAAD,CAAUA,GAAG,WAAb,cAAyB,gDAAzB,UACA,eAAC,IAAD,CAAUA,GAAG,UAAb,cAAwB,+CAAxB,kBAIJ,cAAC,IAAD,CAASQ,OAAK,EAACd,YAAaA,EAAaO,MAAOZ,EAAWW,GAAG,SAA9D,SACI,oBAAIE,UAAWJ,IAASW,QAAxB,SAAiC,gDAErC,cAAC,IAAD,CAASD,OAAK,EAACd,YAAaA,EAAaO,MAAOZ,EAAWW,GAAG,cAA9D,SACI,oBAAIE,UAAWJ,IAASW,QAAxB,SAAiC,qDAErC,cAAC,IAAD,CAASD,OAAK,EAACd,YAAaA,EAAaO,MAAOZ,EAAWW,GAAG,YAA9D,SACI,oBAAIE,UAAWJ,IAASW,QAAxB,SAAkC,mDAEtC,cAAC,IAAD,CAASD,OAAK,EAACd,YAAaA,EAAaO,MAAOZ,EAAWW,GAAG,WAA9D,SACI,oBAAIE,UAAWJ,IAASW,QAAxB,SAAkC,kDAEtC,cAAC,IAAD,CAASD,OAAK,EAACd,YAAaA,EAAaO,MAAOZ,EAAWW,GAAG,UAA9D,SACI,oBAAIE,UAAWJ,IAASW,QAAxB,SAAkC,6D,GAhDzCC,aCFfC,EAAsBC,IAAMC,gBAE5BC,EAAuBH,EAAoBI,SAC3CC,EAAuBL,EAAoBM,SAGlCN,IC4BAO,G,kKA/BX,WACI,OACI,8BACI,sBAAKhB,UAAU,SAAf,UACI,mBAAGiB,KAAK,yBAAR,SACI,qBAAKjB,UAAU,eAAekB,IAAKC,sCAAkDC,IAAI,wBAE7F,qBAAKpB,UAAU,WAAf,SACI,mBAAGiB,KAAK,qBAAR,SACI,oBAAIjB,UAAU,WAAd,SACI,cAACc,EAAD,UAEQ,SAACO,GACG,OAAO,8BACFA,EAASC,gBAQtC,oBAAItB,UAAU,uBAAd,8C,GAvBSQ,cC6Cde,E,4JA5CX,WACI,OACI,gCACI,cAAC,EAAD,IAEA,oBAAGvB,UAAU,cAAb,0CAAwD,cAACc,EAAD,UAEhD,SAACO,GACG,OAAO,+BACFA,EAASC,UAJ1B,0KAUA,qBAAKtB,UAAU,mBAAf,SAEI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,YAAf,gBACA,qBAAKA,UAAU,YAAf,kBACA,qBAAKA,UAAU,YAAf,iBACA,qBAAKA,UAAU,YAAf,uBACA,qBAAKA,UAAU,YAAf,wBACA,qBAAKA,UAAU,YAAf,yBACA,qBAAKA,UAAU,YAAf,2BACA,qBAAKA,UAAU,YAAf,0BACA,qBAAKA,UAAU,YAAf,oBACA,qBAAKA,UAAU,YAAf,mBACA,qBAAKA,UAAU,YAAf,mBACA,qBAAKA,UAAU,YAAf,oBACA,qBAAKA,UAAU,YAAf,sBACA,qBAAKA,UAAU,YAAf,oBACA,qBAAKA,UAAU,YAAf,oBACA,qBAAKA,UAAU,YAAf,sBACA,qBAAKA,UAAU,YAAf,uBACA,qBAAKA,UAAU,YAAf,kBACA,qBAAKA,UAAU,YAAf,iC,GArCJQ,aCmBLgB,G,wKAlBX,WAAU,IAAD,EACkDC,KAAKC,MAAtDC,EADD,EACCA,UAAWC,EADZ,EACYA,KAAMC,EADlB,EACkBA,MAAQC,EAD1B,EAC0BA,OAAOC,EADjC,EACiCA,aACtC,OACI,8BACI,qBAAK/B,UAAU,aAAf,SACI,oBAAGiB,KAAMc,EAAT,UACI,qBAAK/B,UAAU,oBACXkB,IAAKS,EAAWE,MAAOA,EAAOC,OAAQA,IAC1C,sBAAK9B,UAAU,mBAAf,UAAmC4B,EACnDH,KAAKC,MAAMM,uB,GAXWxB,cCkEfyB,E,4JA7DX,WAII,OACI,qCACI,qBAAKjC,UAAU,aAAf,SACI,qBAAIA,UAAU,WAAd,UACI,6BACI,cAAC,EAAD,CAAiB2B,UARf,sHAQ2CC,KAAK,GAAGC,MAAM,OAAOC,OAAO,WAE7E,6BACI,cAAC,EAAD,CAAiBH,UAVb,oGAU2CC,KAAK,GAAGC,MAAM,OAAOC,OAAO,WAG/E,6BACI,cAAC,EAAD,CAAiBH,UAbd,uLAa2CC,KAAK,GAAGC,MAAM,OAAOC,OAAO,gBAKtF,sBAAK9B,UAAU,kCAAf,UAEI,8BACI,oBAAIA,UAAU,UAAd,wCAEJ,8BACI,oBAAIA,UAAU,cAAd,SACI,cAACc,EAAD,UAEQ,SAACO,GACG,OAAO,+BACFA,EAASC,cAOlC,8BACI,oBAAItB,UAAU,cAAd,uEAEJ,8BACI,mBAAGA,UAAU,YAAb,6KAMJ,8BACI,cAAC,IAAD,CAASF,GAAG,WAAZ,SACI,wBAAQE,UAAU,aAAlB,wC,GApDTQ,aCUJ0B,G,kKAbX,WAAU,IAAD,EACiBT,KAAKC,MAAtBS,EADA,EACAA,SAAUC,EADV,EACUA,KACf,OAEI,mCACI,mBAAGnB,KAAM,sBAAuBkB,EAAU,IAAKC,EAA/C,SACK,qBAAKpC,UAAU,YAAYkB,IAAK,4DAA6DiB,EAAS,SAAUC,Y,GAP3G5B,cC4CX6B,G,kKA5CX,WACI,IAAIC,EAASb,KAAKC,MAAMJ,KACpB,MAAgB,SAAbgB,EACU,gCACL,sBAAMtC,UAAU,YAAhB,oCADK,UAIS,QAAbsC,EACG,gCACJ,sBAAMtC,UAAU,WAAhB,oCADI,SAKS,SAAbsC,EACI,gCACJ,sBAAMtC,UAAU,YAAhB,oCADI,UAKS,QAAbsC,EACK,gCACL,sBAAMtC,UAAU,WAAhB,oCADK,SAKQ,QAAbsC,EACK,gCACL,sBAAMtC,UAAU,WAAhB,oCADK,SAKQ,WAAbsC,EACK,gCACL,sBAAMtC,UAAU,cAAhB,oCADK,YAKF,4B,GAtCCQ,cC2DT+B,G,6KArDX,c,oBAIA,WACI,IAAMC,EAAe,GAIrB,OAHAf,KAAKC,MAAMe,cAAcC,SAAQ,SAACJ,GAC9BE,EAAaG,KAAK,cAAC,EAAD,CAA0BrB,KAAMgB,GAAhBA,OAGlC,sBAAKtC,UAAU,YAAf,cAA4B,sBAAKA,UAAU,OAAf,UAExB,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,eAAf,SACI,qBAAKA,UAAU,QAAf,SACI,qBAAKA,UAAU,MACXkB,IAAKO,KAAKC,MAAMkB,yBAG5B,qBAAK5C,UAAU,eAAf,SACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,SAAf,SACI,6BAAKyB,KAAKC,MAAMmB,aAEpB,4BACKpB,KAAKC,MAAMoB,kBAEhB,qBAAI9C,UAAU,8BAAd,UAEI,6BAAK,mBAAGiB,KAAMQ,KAAKC,MAAMqB,mBAApB,0BAEL,mCAAK,mBAAG9B,KAAMQ,KAAKC,MAAMsB,eAApB,oBAAL,OAEA,mCAAK,mBAAG/B,KAAMQ,KAAKC,MAAMuB,aAApB,kBAAL,kBAKhB,sBAAKjD,UAAU,MAAf,UACI,qBAAKA,UAAU,kCAAf,yCAGA,qBAAKA,UAAU,qCAAf,SACKwC,iB,GA7CHhC,c,kECkEP0C,EAjEW,WAAO,IAAD,EAEEC,mBAAS,IAFX,mBAErBC,EAFqB,KAEZC,EAFY,OAGAF,mBAAS,IAHT,mBAGrBG,EAHqB,KAGbC,EAHa,OAIcJ,mBAAS,IAJvB,mBAIrBK,EAJqB,KAINC,EAJM,KAQtBC,EAAU,CACZ,CACIpC,KAAM,QACNqC,SAAU,SAAAC,GAAG,OAAIA,EAAIC,OACrBC,UAAU,GAEd,CACIxC,KAAM,OACNqC,SAAU,SAAAC,GAAG,OAAI,qBAAK1C,IAAK0C,EAAIG,KAAMC,QAAQ,OAAO5C,IAAI,iBAAiBS,MAAO,IAAKC,OAAQ,OAC7FgC,UAAU,IA6BlB,OAtBAG,qBAAW,WACP,sBAAC,4BAAAC,EAAA,+EAE8BC,IAAMC,IAL7B,gGAGP,OAEaC,EAFb,OAGOhB,EAAWgB,EAASC,MACpBb,EAAiBY,EAASC,MAC1BC,QAAQC,IAAIH,EAASC,MAL5B,gDAQOC,QAAQC,IAAR,MARP,wDAAD,KAWD,IAEHP,qBAAW,WACP,IAAMQ,EAASrB,EAAQsB,QAAQ,SAACC,GAC5B,OAAOA,EAAYd,MAAMe,cAAcC,MAAMvB,EAAOsB,kBAGxDnB,EAAiBgB,KACnB,CAACnB,IAEK,cAAC,IAAD,CACJO,MAAO,2BACPH,QAASA,EACTY,KAAMd,EACNsB,YAAU,EACVC,aAAW,EACXC,wBAAwB,QACxBC,kBAAgB,EAChBC,WAAS,EACTC,mBACI,uBAAOC,KAAK,OAAOC,YAAY,eAC/BrF,UAAU,oBACVsF,MAAOhC,EACPiC,SAAW,SAACC,GAAD,OAAOjC,EAAUiC,EAAEC,OAAOH,aChC7CI,G,MAAOC,KAAKC,MAAMD,KAAKE,UAxBhB,CACPC,YAAa,CAAC,CACVC,UAAW,EACXC,YAAa,oCACbC,mBAAoB,uCACpBC,iBAAkB,CAAC,OAAQ,OAAQ,OACnCC,sBAAuB,QACvBC,kBAAmB,GACnBC,gBAAiB,GACjBC,sBAAuB,uHAE3B,CACIP,UAAW,EACXC,YAAa,mCACbC,mBAAoB,6CACpBC,iBAAkB,CAAC,SAAU,MAAO,OACpCC,sBAAuB,QACvBC,kBAAmB,GACnBC,gBAAiB,GACjBC,sBAAuB,4HAkDhBC,E,4JA3CX,WACI,IAAIC,EAAW,aAEf,OACI,gCACI,cAAC,EAAD,CAAarE,SAAUqE,EAAUpE,KAAK,4BACtC,cAAC,EAAD,CAAaD,SAAUqE,EAAUpE,KAAK,kCACtC,cAAC,EAAD,CAAaD,SAAUqE,EAAUpE,KAAK,iBACtC,cAAC,EAAD,CAAaD,SAAUqE,EAAUpE,KAAK,8BACtC,cAAC,EAAD,CAAaD,SAAUqE,EAAUpE,KAAK,2BACtC,uBASC,iDACD,+CACCsD,EAAKI,YAAYW,KAAI,SAAAC,GAElB,OACI,cAAC,EAAD,CAAiC7D,SAAU6D,EAAQV,YAC/ClD,gBAAiB4D,EAAQT,mBACzBxD,cAAeiE,EAAQR,iBACvBtD,mBAAoB8D,EAAQJ,sBAC5BvD,mBAAoB2D,EAAQP,sBAC5BnD,eAAgB0D,EAAQN,kBACxBnD,aAAcyD,EAAQL,iBANZK,EAAQX,cAW9B,uBACA,yDACA,cAAC,EAAD,W,GAtCUvF,aCUXmG,G,kKAtCX,WAKI,OACI,sBAAK3G,UAAU,SAAf,UACI,qBAAKA,UAAU,cAAf,SACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,YAAYkB,IAAI,6GAA6GE,IAAI,iBAChJ,oBAAIpB,UAAU,aAAd,oBACA,cAAC,EAAD,CAAiB2B,UATb,sHASyCC,KAAK,UAAUC,MAAM,OAAOC,OAAO,OAAOC,aAAa,kCACpG,cAACjB,EAAD,UAEgB,SAACO,GACG,OAAO,+BAEH,cAAC,EAAD,CAAiBM,UAdpC,+HAciEC,KAAK,yBAAyBC,MAAM,OAAOC,OAAO,cAMxH,cAAC,EAAD,CAAiBH,UAnBX,iGAmByCC,KAAK,yBAAyBC,MAAM,OAAOC,OAAO,cAGzG,qBAAK9B,UAAU,eAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,6CACA,qEACA,cAAC,EAAD,gB,GA/BDQ,c,wBCHnBoG,G,MAAW,IACXC,EAAa,GAiCbnB,EAAOC,KAAKC,MAAMD,KAAKE,UAhChB,KC0BIiB,GDOgBtG,Y,4JC/B3B,WAWQ,OACI,8BAEI,cAAC,EAAD,CAAiBmB,UAXX,6FAWsCE,MAAM,OAAOC,OAAO,OAAhE,SACA,wD,GAjBKtB,cCiFVuG,G,wDAhFX,WAAYrF,GAAQ,IAAD,8BACf,cAAMA,IAoCVsF,eAAiB,WACbC,YAAW,WACP9C,IAAMC,IAAI,qDACL8C,MAAK,SAAA7C,GACF,IAAI8C,EAAU9C,EAASC,KACvBC,QAAQC,IAAI,4CAEZ,EAAK4C,SAAS,CACVC,WAAYF,EAAQE,WACpBC,aAAcH,EAAQG,aACtBC,WAAYJ,EAAQI,WACpBC,WAAYL,EAAQK,gBAI3BC,OAAM,SAAAjC,GAAC,OAAIjB,QAAQC,IAAIgB,QAC7B,MAlDH,EAAKkC,MAAQ,CACTL,WAAY,EACZC,aAAc,EACdC,WAAY,EACZC,WAAY,MAPD,E,qDAWnB,WAAqB,IAAD,OAGhBrD,IAAMC,IAAI,qDACL8C,MAAK,SAAA7C,GACF,IAAI8C,EAAU9C,EAASC,KACnB,EAAK8C,SAAS,CACVC,WAAYF,EAAQE,WACpBC,aAAcH,EAAQG,aACtBC,WAAYJ,EAAQI,WACpBC,WAAYL,EAAQK,gBAG/BC,OAAM,SAAAjC,GAAC,OAAIjB,QAAQC,IAAIgB,Q,kCAKhC,WACI/D,KAAK2F,SAAS,CACVO,SAAS,M,oBAyBjB,WAEI,OADApD,QAAQC,IAAI,qCAGR,8BACI,sBAAKxE,UAAU,gBAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,sBAAMA,UAAU,eAAhB,2BACA,uBAAMA,UAAU,iBAAhB,cAAmCyB,KAAKiG,MAAML,WAA9C,UAEJ,sBAAKrH,UAAU,qBAAf,UACI,sBAAMA,UAAU,eAAhB,6BACA,uBAAMA,UAAU,iBAAhB,cAAmCyB,KAAKiG,MAAMJ,aAA9C,UAEJ,sBAAKtH,UAAU,qBAAf,UACI,sBAAMA,UAAU,eAAhB,4BACA,uBAAMA,UAAU,iBAAhB,cAAmCyB,KAAKiG,MAAMF,WAA9C,mB,GAzEMI,kBC4JfC,G,wDA1JX,WAAYnG,GAAQ,IAAD,8BACf,cAAMA,IAcVoG,qBAAuB,SAACC,GACpB,EAAKX,SAAS,CACVZ,SAAUuB,EAAMtC,OAAOH,SAjBZ,EAsBnB0C,kBAAoB,SAACD,GACjB,EAAKX,SAAS,CACVa,MAAOF,EAAMtC,OAAOH,SAxBT,EA4BnB4C,oBAAsB,SAACH,GACnB,EAAKX,SAAS,CACVe,QAASJ,EAAMtC,OAAOH,SA9BX,EAkCnB8C,oBAAsB,SAACL,GACnB,EAAKX,SAAS,CACViB,aAAcN,EAAMtC,OAAOH,SApChB,EAwCnBgD,aAAe,SAACP,GAEZ,GAA2B,KAAvB,EAAKL,MAAMlB,UAAsC,KAApB,EAAKkB,MAAMO,OAEd,KAAvB,EAAKP,MAAMS,SAA8C,KAA5B,EAAKT,MAAMW,aAAqB,CAEhEE,MAAM,GAAD,OAAI,EAAKb,MAAMlB,SAAf,YAA2B,EAAKkB,MAAMO,MAAtC,YAA+C,EAAKP,MAAMS,QAA1D,YAAqE,EAAKT,MAAMW,eACjF9D,QAAQC,IAAI,EAAKkD,OACrB,EAAKN,UAAS,SAAAoB,GAAS,MAAK,CAExBC,YAAa,sBACbC,oBAAqB,gBAIzB,IAIIpE,EAAM,CACNkC,SAAW,EAAKkB,MAAMlB,SACtByB,MAAQ,EAAKP,MAAMO,MACnBE,QAAU,EAAKT,MAAMS,QACrBE,aAAe,EAAKX,MAAMW,cAG9B9D,QAAQC,IAAIF,GACZH,IAAMwE,KAAK,oDAAqDrE,EAZnD,CACTsE,QAAS,CAAE,eAAgB,uCAY9B1B,MAAK,SAAA7C,OAKLoD,OAAM,SAAAjC,GAAC,OAAIjB,QAAQC,IAAIgB,MACvBuC,EAAMc,sBAGPd,EAAMc,iBACNN,MAAM,SACN,EAAKnB,UAAS,SAAAoB,GAAS,MAAK,CAExBC,YAAa,qBACbC,oBAAqB,kBAEzBnE,QAAQC,IAAR,UAAe,EAAKkD,MAAMgB,uBApFf,EAwFnBI,gBAAkB,WACd,EAAKC,MAAMC,QAAQhC,kBAvFnB,EAAK+B,MAAQrI,IAAMuI,YACnB,EAAKvB,MAAQ,CACTlB,SAAU,GACVyB,MAAO,GACPE,QAAS,GACTE,aAAc,GACdI,YAAa,GACbC,oBAAqB,IATV,E,0CA6FnB,WAGI,OAFAnE,QAAQC,IAAI,uBAGR,gCACI,mBAAGxE,UAAU,aAAb,SACI,uJAIJ,cAAC,EAAD,CAAmBkJ,IAAKzH,KAAKsH,QAC7B,qBAAK/I,UAAU,iBAAf,SACI,uBAAMmJ,SAAU1H,KAAK6G,aAArB,UACI,gCACI,qBAAKtI,UAAU,gBAAf,SACI,uBACIqF,YAAY,WACZD,KAAK,OACLE,MAAO7D,KAAKiG,MAAMlB,SAClBjB,SAAU9D,KAAKqG,yBAGvB,qBAAK9H,UAAU,aAAf,SACI,uBACIqF,YAAY,QACZD,KAAK,QACLE,MAAO7D,KAAKiG,MAAMO,MAClB1C,SAAU9D,KAAKuG,sBAGvB,qBAAKhI,UAAU,eAAf,SACI,0BACIqF,YAAY,UACZC,MAAO7D,KAAKiG,MAAMS,QAClB5C,SAAU9D,KAAKyG,wBAGvB,qBAAKlI,UAAU,cAAf,SACI,qBAAKA,UAAsC,wBAA3ByB,KAAKiG,MAAMe,YAAwC,sBAAwB,qBAA3F,SACKhH,KAAKiG,MAAMgB,wBAGpB,sBAAK1I,UAAU,eAAf,UACI,uBAAOA,UAAU,qBAAjB,4BACA,yBAAQsF,MAAO7D,KAAKiG,MAAMW,aAAc9C,SAAU9D,KAAK2G,oBACnDpI,UAAU,wBADd,UAEI,wBAAQsF,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,OAAd,+BAIZ,wBAAQtF,UAAU,aAAaoF,KAAK,SAASgE,QAAS3H,KAAKqH,gBAA3D,gC,GApJFtI,cCmJP6I,G,kNArJXC,qBAAuB,SAACvB,GACpB,IAAIwB,EAAYC,SAASC,qBAAqB,OAC9CD,SAAS3F,MAAQ,GACjB,IAAI,IAAI6F,EAAE,EAAGA,EAAGH,EAAWI,OAAQD,IAG/BH,EAAWG,GAAG3J,MAAM6J,QAAU,OAElC,IAAIC,EAAcC,OAAO,gCAAiC,cAC1DN,SAASO,eAAe,eAAeC,UAAYH,EACnDL,SAASO,eAAe,YAAYhK,MAAM6J,QAAU,GACpDK,OAAOC,QAEP,IAAQR,EAAE,EAAGA,EAAGH,EAAWI,OAAQD,IAG/BH,EAAWG,GAAG3J,MAAM6J,QAAU,GAElCJ,SAAS3F,MAAQ,YACjB2F,SAASO,eAAe,eAAeC,UAAY,aACnDR,SAASO,eAAe,YAAYhK,MAAM6J,QAAU,Q,4CAIxD,WAQI,OACI,gCACI,oBAAIO,GAAG,WAAWpK,MATC,CACvBX,MAAO,GACPgL,UAAW,SAEXR,QAAU,QAKN,qBACA,kCACI,qBAAI5J,UAAU,UAAd,UACI,qBAAIA,UAAU,YAAd,UACI,4CADJ,KACwB,uBADxB,OAEQ,uBAFR,kDAKA,8CACgB,sBAAMmK,GAAG,cAAT,wBADhB,IACyD,uBADzD,kCAEmC,uBAFnC,kEAMJ,oBAAInK,UAAU,0BAAd,SACI,qBAAIqK,QAAQ,IAAZ,UACI,oCAAM,6CAAN,OACA,uBAAOrK,UAAU,aAAjB,SACI,+BACI,oBAAIA,UAAU,YAAd,qBAGA,sEACwC,uBADxC,4DAQhB,oBAAIA,UAAU,gBAAd,SACI,qBAAIqK,QAAQ,IAAZ,UACI,oCAAM,oDAAN,OACA,kCACI,+BACI,oBAAIrK,UAAU,YAAd,uBAGA,0EAIJ,+BACI,oBAAIA,UAAU,YAAd,mBAGA,oEAIJ,+BACI,oBAAIA,UAAU,YAAd,0BAGA,+EAIJ,+BACI,oBAAIA,UAAU,YAAd,iBAGA,wDAOhB,oBAAIA,UAAU,gBAAd,SACI,qBAAIqK,QAAQ,IAAZ,UACI,oCAAM,qDAAN,OACA,kCACI,+BACI,oBAAIrK,UAAU,YAAd,wBAGA,+BACI,kEADJ,iCAC0E,uBAD1E,mFAE+E,uBAF/E,4DAGwD,uBAHxD,yCAQJ,+BACI,oBAAIA,UAAU,YAAd,wBAGA,+BACI,iEADJ,iCACyE,uBADzE,mFAE+E,uBAF/E,iEAG6D,uBAH7D,oCAIgC,uBAJhC,sFAYhB,oBAAIA,UAAU,gBAAd,SACI,qBAAIqK,QAAQ,IAAZ,UACI,oCAAM,kDAAN,OADJ,yDAMZ,wBAAQjB,QAAS3H,KAAK6H,qBAAtB,oC,GA/IS9I,cCEf8J,EAAU,IAAIC,eACpBD,EAAQE,iBAAiB,oBAAoB,WACzC,GAA0B,IAAvBF,EAAQG,WAEN,OADDlG,QAAQC,IAAI8F,EAAQI,cACZJ,EAAQI,gB,UCwBTC,E,kDA5BX,WAAYjJ,GAAQ,IAAD,8BACf,cAAMA,IASVsF,eAAiB,SAACxB,GACV,EAAK9D,MAAMkJ,iBAAiBpF,IARhC,EAAKkC,MAAQ,CACRpG,KAAK,GACL2G,MAAM,GACN4C,eAAe,IANL,E,0CAcnB,WACI,OACI,mCACI,sBAAK7K,UAAU,oBAAf,UACI,uBAAMA,UAAU,eAAhB,UAAgCyB,KAAKC,MAAME,KAA3C,SAEA,uBAAO5B,UAAU,gBAAgBsF,MAAO7D,KAAKC,MAAM4D,MAAOC,SAAU9D,KAAKuF,eACjE1F,KAAOG,KAAKC,MAAMJ,gB,GAtBVd,aCG9BsK,G,wDAEF,WAAYpJ,GAAQ,IAAD,8BACf,cAAMA,IAkBVqJ,cAAgB,SAACvF,GAEb,GAAuB,IAAnB,EAAKkC,MAAMpG,MAAkC,IAApB,EAAKoG,MAAMO,OACJ,IAA7B,EAAKP,MAAMmD,eAAsB,CAMpC1G,IAAMwE,KAAK,qDAAsD,EAAKjB,MAJzD,CACTkB,QAAS,CAAE,eAAgB,uCAI1B1B,MAAK,SAAA7C,OAILoD,OAAM,SAAAjC,GAAC,OAAIjB,QAAQC,IAAIgB,MAC5BA,EAAEqD,sBAEFrD,EAAEqD,iBACFN,MAAM,UArCK,EA0CnBqC,iBAAmB,SAACpF,GAChB,EAAK4B,SAAL,eACK5B,EAAEC,OAAOnE,KAAOkE,EAAEC,OAAOH,SA1C9B,EAAKoC,MAAQ,CACTpG,KAAM,GACN2G,MAAO,GACP4C,eAAgB,IALL,E,qDASnB,WACI,IAAIG,EAAavJ,KAAKwJ,QACtBxJ,KAAK2F,SAAS,CACV9F,KAAM0J,EAAW1J,KACjB2G,MAAO+C,EAAW/C,MAClB4C,eAAgBG,EAAWH,mB,oBAmCnC,WACI,OACI,8BACI,sBAAK7K,UAAU,cAAf,UACI,sBAAKA,UAAU,cAAf,cAA8B,cAAC,EAAD,CAAuB4B,KAAK,OAAO0D,MAAO7D,KAAKiG,MAAMpG,KAC/EA,KAAK,OAAOsJ,iBAAkBnJ,KAAKmJ,mBADvC,OAEA,sBAAK5K,UAAU,cAAf,cAA8B,cAAC,EAAD,CAAuB4B,KAAK,QAAQ0D,MAAO7D,KAAKiG,MAAMO,MAChF3G,KAAK,QAAQsJ,iBAAkBnJ,KAAKmJ,mBADxC,OAEA,sBAAK5K,UAAU,cAAf,cAA8B,cAAC,EAAD,CAAuB4B,KAAK,iBAAiB0D,MAAO7D,KAAKiG,MAAMmD,eACzFvJ,KAAK,iBAAiBsJ,iBAAkBnJ,KAAKmJ,mBADjD,OAEA,wBAAQxB,QAAS3H,KAAKsJ,cAAtB,2B,GA7DOvK,cAoE3BsK,EAAaI,YAAczK,EAEZqK,QCWAK,I,wDAjFX,WAAYzJ,GAAQ,IAAD,8BACf,cAAMA,IAOV0J,aAAe,SAAC5F,GACZ,IAAIlB,EAAO,CACP+G,KAAM,EAAK3D,MAAM2D,MAErB9G,QAAQC,IAAIF,GAMZH,IAAMwE,KAAK,oDAAqDrE,EAJnD,CACTsE,QAAS,CAAE,eAAgB,uCAI1B1B,MAAK,SAAA7C,GAGFE,QAAQC,IAAI,QACZ,EAAK9C,MAAM4J,aAEd7D,OAAM,SAAAjC,GAAC,OAAIjB,QAAQC,IAAIgB,MAC5BA,EAAEqD,kBA1Ba,EA8BnB0C,eAAiB,SAAC/F,GACd,IAAIlB,EAAO,CACP+G,KAAM,EAAK3D,MAAM2D,MAErB9G,QAAQC,IAAIF,GAMZH,IAAMwE,KAAK,sDAAuDrE,EAJrD,CACTsE,QAAS,CAAE,eAAgB,uCAI1B1B,MAAK,SAAA7C,GACFE,QAAQC,IAAI,WAAW,EAAKkD,MAAM2D,MAClC,EAAK3J,MAAM4J,aAEd7D,OAAM,SAAAjC,GAAC,OAAIjB,QAAQC,IAAIgB,MAC5BA,EAAEqD,kBA3CF,EAAKnB,MAAQ,CACT2D,KAAM,IAJK,E,qDAmDnB,WACI5J,KAAK2F,SAAS,CACViE,KAAM5J,KAAKC,MAAM8J,c,oBAIzB,WAEI,OACI,8BACI,sBAAKxL,UAAU,oBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,mBAAf,cAAoCyB,KAAKC,MAAMS,YAC/C,sBAAKnC,UAAU,eAAf,cAAgCyB,KAAKC,MAAM+J,WAG/C,sBAAKzL,UAAU,eAAf,UACI,sBAAKA,UAAU,eAAf,cAAgCyB,KAAKC,MAAMgK,WAC3C,sBAAK1L,UAAU,oBAAf,UACI,wBAAQA,UAAU,eAAeoJ,QAAS3H,KAAK2J,aAA/C,kBACA,wBAAQpL,UAAU,iBAAiBoJ,QAAS3H,KAAK8J,eAAjD,mC,GAxEE/K,cC0EfmL,G,kDAzEX,WAAYjK,GAAQ,IAAD,8BACf,cAAMA,IAqBVkK,gBAAkB,WACdzH,IAAMC,IAAI,4DACL8C,MAAK,SAAA7C,GACFE,QAAQC,IAAIH,EAASC,MACrB,EAAK8C,SAAS,CACVvH,MAAOwE,EAASC,UAGvBmD,OAAM,SAAAjC,GAAC,OAAIjB,QAAQC,IAAIgB,OA9Bb,EAiCnBqG,mBAAqB,WACU,SAAvB,EAAKnE,MAAMoE,QACX,EAAK1E,SAAS,CACV0E,QAAS,UAGb,EAAK1E,SAAS,CACV0E,QAAS,SAGjB,EAAKF,mBAxCL,EAAKlE,MAAQ,CACT7H,MAAO,GACPiM,QAAS,QALE,E,qDAUnB,WAAqB,IAAD,OAChB3H,IAAMC,IAAI,4DACL8C,MAAK,SAAA7C,GACFE,QAAQC,IAAIH,EAASC,MACrB,EAAK8C,SAAS,CACVvH,MAAOwE,EAASC,UAGvBmD,OAAM,SAAAjC,GAAC,OAAIjB,QAAQC,IAAIgB,Q,oBA4BhC,WAAU,IAAD,OAEL,OACI,gCACI,wBAAQ4D,QAAS3H,KAAKmK,gBAAtB,qBACA,yBAAQxC,QAAS3H,KAAKoK,mBAAtB,wBAAsDpK,KAAKiG,MAAMoE,WAChErK,KAAKiG,MAAM7H,MAAM4G,KAAI,SAAA1C,GAClB,GAA2B,SAAvB,EAAK2D,MAAMoE,SACX,GAAI/H,EAAK+H,QAAS,CACd,IAAIT,EAAO,IAAII,KAAK1H,EAAKsH,MACrBU,EAAiBV,EAAKW,mBAAmB,SAAW,IAAMX,EAAKY,qBACnE,OAAQ,cAAC,GAAD,CAAiC9J,SAAU4B,EAAKyC,SAAUiF,KAAMM,EAAgBL,QAAS3H,EAAKoE,QAASqD,UAAWzH,EAAKsH,KAAMC,QAAS,EAAKM,iBAArH7H,EAAKsH,YAGvC,IAAKtH,EAAK+H,QAAS,CACf,IAAIT,EAAO,IAAII,KAAK1H,EAAKsH,MACrBU,EAAiBV,EAAKW,mBAAmB,SAAW,IAAMX,EAAKY,qBACnE,OAAQ,cAAC,GAAD,CAAiC9J,SAAU4B,EAAKyC,SAAUiF,KAAMM,EAAgBL,QAAS3H,EAAKoE,QAASqD,UAAWzH,EAAKsH,KAAMC,QAAS,EAAKM,iBAArH7H,EAAKsH,iB,GAhEjC7K,aCgFf0L,I,yDAhFX,WAAYxK,GAAQ,IAAD,8BACf,cAAMA,IAOVyK,aAAe,WACX,EAAK/E,SAAS,CACVgF,WAAY,EAAK1E,MAAM0E,YACxB,WACK,EAAK1E,MAAM0E,WACX7H,QAAQC,IAAI,mBACZ,EAAK4C,SAAS,CACVgF,WAAW,EACXC,OAAQ,QAGZ,EAAKC,QAAQ,SAEb,EAAKlF,SAAS,CACVgF,WAAW,EACXC,OAAQ,OAEZ,EAAKC,QAAQ,WAzBN,EAmDnBA,QAAU,SAACC,GACP,IAAIjI,EAAO,CACPkI,QAASD,GAEbhI,QAAQC,IAAIF,GAMZH,IAAMwE,KAAK,qDAAsDrE,EAJpD,CACTsE,QAAS,CAAE,eAAgB,uCAI1B1B,MAAK,SAAA7C,OAELoD,OAAM,SAAAjC,GAAC,OAAIjB,QAAQC,IAAIgB,OA9D5B,EAAKkC,MAAQ,CACT0E,WAAW,EACXC,OAAQ,OAJG,E,qDA+BnB,WAAqB,IAAD,OAChBlI,IAAMC,IAAI,sDACL8C,MAAK,SAAA7C,GACF,IAAI8C,EAAU9C,EAASC,KACvBC,QAAQC,IAAI2C,GACI,QAAZA,EACA,EAAKC,SAAS,CACVgF,WAAW,EACXC,OAAQ,QAGZ,EAAKjF,SAAS,CACVgF,WAAW,EACXC,OAAQ,UAInB5E,OAAM,SAAAjC,GAAC,OAAIjB,QAAQC,IAAIgB,Q,oBAmBhC,WACI,OACI,sDACI,uBAAOJ,KAAK,WACRqH,eAAgBhL,KAAKiG,MAAM0E,UAC3B7G,SAAU9D,KAAK0K,eAElB1K,KAAKiG,MAAM2E,c,GA3EH7L,cC6BVkM,G,4JAtBX,WAEI,OACI,6CAEI,uBACA,sBAAM1M,UAAU,gBAAhB,8BAAuD,uBACvD,qBAAKA,UAAU,eAAf,SACG,cAAC,EAAD,MAGH,uBACA,sBAAMA,UAAU,gBAAhB,gCAAyD,uBACzD,cAAC,GAAD,IACA,qBAAKA,UAAU,eAAf,SACG,cAAC,GAAD,a,GAjBQQ,aCgFZmM,G,kDApFX,WAAYjL,GAAQ,IAAD,8BACf,cAAMA,IASVoG,qBAAuB,SAACC,GACpB,EAAKX,SAAS,CACVZ,SAAUuB,EAAMtC,OAAOH,SAZZ,EAgBnBsH,qBAAuB,SAAC7E,GACpB,EAAKX,SAAS,CACVyF,SAAU9E,EAAMtC,OAAOH,SAlBZ,EAsBnBgD,aAAe,SAACP,GACZ,GAA2B,IAAvB,EAAKL,MAAMlB,UAAyC,IAAvB,EAAKkB,MAAMmF,SAAgB,CAMxD1I,IAAMwE,KAAK,oDAAqD,EAAKjB,MAJxD,CACTkB,QAAS,CAAE,eAAgB,uCAI9B1B,MAAK,SAAA7C,GACFE,QAAQC,IAAIH,EAASC,MACrBC,QAAQC,IAAI,EAAKkD,OACjB,EAAKN,SAAS,CACT3C,OAAQJ,EAASC,OAGtBC,QAAQC,IAAI,EAAKkD,MAAMjD,WAG1BgD,OAAM,SAAAjC,GAAC,OAAIjB,QAAQC,IAAIgB,MAGxBuC,EAAMc,sBAENd,EAAMc,iBACNN,MAAM,SACNhE,QAAQC,IAAR,UAAe,EAAKkD,MAAMgB,uBA5C9B,EAAKhB,MAAQ,CACTlB,SAAU,GACVqG,SAAU,GACVpI,OAAO,IANI,E,0CAmDnB,WAEI,OAAyB,IAAtBhD,KAAKiG,MAAMjD,OAEN,cAAC,GAAD,IAIA,8BACI,uBAAM0E,SAAU1H,KAAK6G,aAArB,UACI,6CACA,uBACIlD,KAAK,OACL9D,KAAK,WACLgE,MAAO7D,KAAKiG,MAAMlB,SAClBjB,SAAU9D,KAAKqG,uBACX,uBACR,6CACA,uBACI1C,KAAK,WACL9D,KAAK,WACLgE,MAAO7D,KAAKiG,MAAMmF,SAClBtH,SAAU9D,KAAKmL,uBACX,uBACR,wBAAQxH,KAAK,SAAb,6B,GA5EJ5E,aCyELsM,G,kDArDX,WAAYpL,GAAQ,IAAD,8BACf,cAAMA,IAEDgG,MAAQ,CACTqF,gBAAiB,IAJN,E,qDAQnB,WAAqB,IAAD,OAWhB5I,IAAMC,IAAI,0CACL8C,MAAK,SAAA7C,GACFE,QAAQC,IAAIH,EAASC,MAErB,EAAK8C,SAAS,CACV2F,gBAAiB1I,EAASC,UAGjCmD,OAAM,SAAAjC,GAAC,OAAIjB,QAAQC,IAAIgB,Q,oBAGhC,WACI,OACI,cAAC,IAAD,UACI,qBAAKxF,UAAU,MAAf,SACI,eAACY,EAAD,CAAsB0E,MAAO7D,KAAKiG,MAAMqF,gBAAxC,UACI,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,gBAAgB1M,OAAK,EAAC2M,UAAWhL,IAC7C,cAAC,IAAD,CAAO+K,KAAK,SAASC,UAAW1L,IAChC,cAAC,IAAD,CAAOyL,KAAK,cAAcC,UAAWnG,IACrC,cAAC,IAAD,CAAOkG,KAAK,YAAYC,UAAWtG,IACnC,cAAC,IAAD,CAAOqG,KAAK,WAAWC,UAAWpF,IAClC,cAAC,IAAD,CAAOmF,KAAK,UAAUC,UAAW5D,IACjC,cAAC,IAAD,CAAO2D,KAAK,SAASC,UAAWN,mB,GA5C1CnM,aClBlB0M,IAASC,OAAQ,cAAC,GAAD,IAAQ3D,SAASO,eAAe,U,mBCJjDqD,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,KAAO,uBAAuB,UAAY,4BAA4B,QAAU,0BAA0B,iBAAmB,mCAAmC,SAAW,6B,0LCA7ND,EAAOC,QAAU,CAAC,UAAY,oCAAoC,KAAO,+BAA+B,YAAc,sCAAsC,OAAS,iCAAiC,OAAS,iCAAiC,IAAM,8BAA8B,OAAS,iCAAiC,MAAQ,gCAAgC,MAAQ,gCAAgC,OAAS,iCAAiC,UAAY,oCAAoC,SAAW,mCAAmC,QAAU,kCAAkC,cAAgB,wCAAwC,iBAAmB,2CAA2C,KAAO,+BAA+B,GAAK,+B","file":"static/js/main.134e8f02.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport navStyle from './navStyle.module.css'\r\nimport { NavLink, Link } from 'react-router-dom'\r\n\r\nclass Navbar extends Component {\r\n\r\n    render() {\r\n        const linkStyle = {\r\n            color: 'white',\r\n            padding: '0 16px',\r\n            textDecoration: 'none',\r\n            borderRadius: '70px'\r\n        }\r\n        const activeStyle = {\r\n            fontWeight: \"bold\",\r\n            color: \"red\",\r\n            backgroundColor: \"white\"\r\n        }\r\n        let classname = navStyle.links + \" content\" //\r\n        return (\r\n            <div>\r\n                <nav>\r\n                    <Link to=\"/dev_porfolio\" style={linkStyle}>\r\n                        <div className={navStyle.logo}><h1> Frogora Dev </h1></div>\r\n                    </Link>\r\n                    <ul className={classname}>\r\n                        <li className={navStyle.forMobile} >\r\n                        <div className={navStyle.dropdown}>\r\n                            <div className={navStyle.dropbtn}>Menu\r\n                            </div>\r\n                            <div className={navStyle.dropdown_content}>\r\n                            <NavLink  to=\"/about\"> <span> 1. About </span>    </NavLink>\r\n                            <NavLink  to=\"/experience\"> <span> 2. Experience </span>    </NavLink>\r\n                            <NavLink  to=\"/projects\"> <span> 3. Work  </span>   </NavLink>\r\n                            <NavLink  to=\"/contact\"> <span> 4. Contact </span>    </NavLink>\r\n                            <NavLink  to=\"/resume\"> <span> 5. Resume </span>    </NavLink>\r\n                            </div>\r\n                            </div>\r\n                            </li>\r\n                        <NavLink exact activeStyle={activeStyle} style={linkStyle} to=\"/about\">\r\n                            <li className={navStyle.navItem}><span >1. About</span></li>\r\n                        </NavLink>\r\n                        <NavLink exact activeStyle={activeStyle} style={linkStyle} to=\"/experience\">\r\n                            <li className={navStyle.navItem}><span >2. Experience</span></li>\r\n                        </NavLink>\r\n                        <NavLink exact activeStyle={activeStyle} style={linkStyle} to=\"/projects\">\r\n                            <li className={navStyle.navItem} ><span >3. Projects</span></li>\r\n                        </NavLink>\r\n                        <NavLink exact activeStyle={activeStyle} style={linkStyle} to=\"/contact\">\r\n                            <li className={navStyle.navItem} ><span >4. Contact</span></li>\r\n                        </NavLink>\r\n                        <NavLink exact activeStyle={activeStyle} style={linkStyle} to=\"/resume\">\r\n                            <li className={navStyle.navItem} ><span >5. Resume</span></li>\r\n                        </NavLink>\r\n                        {/* <li className={navStyle.navItem}><span className={navStyle.navItem}>Resume</span></li> */}\r\n\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\n\r\nconst PersonalDataContext = React.createContext()\r\n\r\nconst PersonalDataProvider = PersonalDataContext.Provider\r\nconst PersonalDataConsumer = PersonalDataContext.Consumer\r\n\r\nexport {PersonalDataProvider ,PersonalDataConsumer}\r\nexport default PersonalDataContext","import React, { Component } from 'react'\r\nimport { PersonalDataConsumer } from '../../../components/personalDataContext'\r\nimport \"./about.css\"\r\n\r\nclass HeaderForAbout extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"center\">\r\n                    <a href=\"/images/profilepic.png\">\r\n                        <img className=\"username_pic\" src={process.env.PUBLIC_URL +\"/images/profilepic.png\"} alt=\"FrogoraProfilePic\" />\r\n                    </a>\r\n                    <div className=\"clearfix\">\r\n                        <a href=\"https://www.y.com/\">\r\n                            <h1 className=\"username\">\r\n                                <PersonalDataConsumer>\r\n                                    {\r\n                                        (JsonData) => {\r\n                                            return <div>\r\n                                                {JsonData.name}\r\n                                            </div>\r\n                                        }\r\n                                    }\r\n                                </PersonalDataConsumer>\r\n                            </h1>\r\n                        </a>\r\n                    </div>\r\n                    <h2 className=\"username_description\">\r\n                        Super Excited Developer\r\n                    </h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeaderForAbout\r\n","import React, { Component } from 'react'\r\nimport HeaderForAbout from './About/HeaderForAbout'\r\nimport { PersonalDataConsumer } from '../personalDataContext'\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <HeaderForAbout />\r\n\r\n                <p className=\"about_intro\">Hello! My name is Ruhit Rai  <PersonalDataConsumer>\r\n                    {\r\n                        (JsonData) => {\r\n                            return <span>\r\n                                {JsonData.name}\r\n                            </span>\r\n                        }\r\n                    }\r\n                </PersonalDataConsumer> and I enjoy creating things that live on the internet.\r\n                     My interest in Desktop , Android Mobile , Backend development  started  in 2017 when I decided to learn BCA </p>\r\n                <div className=\"middle_container\">\r\n\r\n                    <div className=\"skillList\">\r\n                        <div className=\"skillItem\"> C</div>\r\n                        <div className=\"skillItem\"> C++</div>\r\n                        <div className=\"skillItem\"> C#</div>\r\n                        <div className=\"skillItem\"> Java SE </div>\r\n                        <div className=\"skillItem\"> JAVA JDBC</div>\r\n                        <div className=\"skillItem\"> JavaSwing </div>\r\n                        <div className=\"skillItem\"> JavaServlet </div>\r\n                        <div className=\"skillItem\"> Javascript </div>\r\n                        <div className=\"skillItem\"> HTML </div>\r\n                        <div className=\"skillItem\"> CSS </div>\r\n                        <div className=\"skillItem\"> PHP </div>\r\n                        <div className=\"skillItem\"> ajax </div>\r\n                        <div className=\"skillItem\"> Reactjs</div>\r\n                        <div className=\"skillItem\"> Mysql</div>\r\n                        <div className=\"skillItem\"> Unity</div>\r\n                        <div className=\"skillItem\"> Android</div>\r\n                        <div className=\"skillItem\"> firebase</div>\r\n                        <div className=\"skillItem\"> git</div>\r\n                        <div className=\"skillItem\"> Docker</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About\r\n","import React, { Component } from 'react'\r\nimport \"./inlineImageText.css\"\r\n\r\nclass InlineImageText extends Component {\r\n\r\n    render() {\r\n        let { imageLink, text ,width , height,redirectLink } = this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"amazonLink\">\r\n                    <a href={redirectLink}>\r\n                        <img className=\"amazonLink__image\"\r\n                            src={imageLink} width={width} height={height} />\r\n                        <div className=\"amazonLink__text\">{text}  \r\n       {this.props.children}\r\n    </div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InlineImageText\r\n","import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport \"./Home/home.css\"\r\nimport InlineImageText from './Template/InlineImageText'\r\nimport { PersonalDataConsumer } from '../personalDataContext'\r\n\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        let githubImageLink = \"https://media.discordapp.net/attachments/658935195403026432/836824730459570196/github-logo_icon-icons.com_73546.png\";\r\n        let linkedinImageLink = \"https://media.discordapp.net/attachments/658935195403026432/837224939991990302/clipart2958481.png\";\r\n        let discordImageLink = \"https://media.discordapp.net/attachments/658935195403026432/837226050139324477/kisspng-discord-computer-icons-logo-clip-art-antopodis-logo-5aec73128661a7.0196443115254453945504.png\";\r\n        return (\r\n            <>\r\n                <div className=\"socialList\">\r\n                    <ul className=\"listItem\">\r\n                        <li>\r\n                            <InlineImageText imageLink={githubImageLink} text=\"\" width=\"24px\" height=\"24px\" />\r\n                        </li>\r\n                        <li>\r\n                            <InlineImageText imageLink={linkedinImageLink} text=\"\" width=\"24px\" height=\"24px\" />\r\n\r\n                        </li>\r\n                        <li>\r\n                            <InlineImageText imageLink={discordImageLink} text=\"\" width=\"29px\" height=\"29px\" />\r\n\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"homeHeadingContainer shiftRight\">\r\n\r\n                    <div>\r\n                        <h1 className=\"heading\">Hi, my name is Ruhit Rai</h1>\r\n                    </div>\r\n                    <div  >\r\n                        <h2 className=\"big-heading\">\r\n                            <PersonalDataConsumer>\r\n                                {\r\n                                    (JsonData) => {\r\n                                        return <span>\r\n                                            {JsonData.name}\r\n                                        </span>\r\n                                    }\r\n                                }\r\n                            </PersonalDataConsumer>\r\n                        </h2>\r\n                    </div>\r\n                    <div >\r\n                        <h3 className=\"big-heading\">I build things for the Desktop , Backend, Mobile , Web.</h3>\r\n                    </div>\r\n                    <div >\r\n                        <p className=\"homeStory\">I'm a BCA student who likes to  build application for PC , Mobile , Web and embedded application.\r\n                            Currently, finding for freelance or junior java dev job:) .\r\n                            {/* <a className=\"link\" href=\"https://upstatement.com/\"> Upstatement </a>\r\n                                         focused on building accessible, human-centered products. */}\r\n                        </p>\r\n                    </div>\r\n                    <div >\r\n                        <NavLink to=\"/contact\">\r\n                            <button className=\"getInTouch\"  >Get In Touch</button>\r\n                        </NavLink>\r\n\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport \"./repoDivCard.css\"\r\n\r\nclass RepoDivCard extends Component {\r\n    render() {\r\n        let {Username, Repo} =this.props;\r\n        return (\r\n            \r\n            <>\r\n                <a href={\"https://github.com/\"+ Username +\"/\"+ Repo}>\r\n                     <img className=\"projimage\" src={\"https://github-readme-stats.vercel.app/api/pin/?username=\"+ Username+\"&repo=\"+ Repo } />\r\n                 </a>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RepoDivCard\r\n","import React, { Component } from 'react'\r\n\r\nclass Languages extends Component {\r\n    render() {\r\n        let language=this.props.name;\r\n            if(language === \"java\"){\r\n                return(  <div>\r\n                    <span className=\"lang java\">‍&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                    java\r\n                    </div> )\r\n            }else if(language === \"cpp\"){\r\n                return( <div>\r\n                    <span className=\"lang cpp\">‍&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                    cpp\r\n                    </div> )\r\n            }\r\n            else if(language === \"html\"){\r\n                return( <div>\r\n                    <span className=\"lang html\">‍&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                    html\r\n                    </div>)\r\n            }\r\n            else if(language === \"css\"){\r\n                return(  <div>\r\n                    <span className=\"lang css\">‍&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                    css\r\n                    </div> )\r\n            }\r\n            else if(language === \"php\"){\r\n                return(  <div>\r\n                    <span className=\"lang php\">‍&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                    php\r\n                    </div> )\r\n            }\r\n            else if(language === \"csharp\"){\r\n                return(  <div>\r\n                    <span className=\"lang csharp\">‍&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                    csharp\r\n                    </div> )\r\n            }else{\r\n                return(<div></div>)\r\n            }\r\n\r\n        \r\n    }\r\n}\r\n\r\nexport default Languages\r\n","import React, { Component } from 'react'\r\nimport \"./cardDiv.css\"\r\nimport Languages from './Languages'\r\nimport \"./projectLinks.css\"\r\n\r\nlet languages = [];\r\nclass CardDiv extends Component {\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const languagelist = []\r\n        this.props.projLanguages.forEach((language) => {\r\n            languagelist.push(<Languages key={language} name={language} />)\r\n        })\r\n        return (\r\n            <div className=\"cardBlock\"> <div className=\"card\">\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"column grow1\">\r\n                        <div className=\"photo\">\r\n                            <img className=\"img\"\r\n                                src={this.props.projCoverImageLink} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"column grow2\">\r\n                        <div className=\"content\">\r\n                            <div className=\"header\">\r\n                                <h2>{this.props.projName}</h2>\r\n                            </div>\r\n                            <p>\r\n                                {this.props.projDescription}\r\n                            </p>\r\n                            <ul className=\"Projectslinks sizeSmallFont\">\r\n                                {/* <!--parent element--> */}\r\n                                <li ><a href={this.props.projExecutableLink}>executable</a></li>\r\n                                {/* <!--first child element--> */}\r\n                                <li> <a href={this.props.projSourceLink}>source</a> </li>\r\n                                {/* <!--second child element--> */}\r\n                                <li> <a href={this.props.projDocsLink}>docs</a> </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"column wrap grow1 sizeSmallFont\">\r\n                        Languages/library/Framework\r\n                </div>\r\n                    <div className=\"column wrap grow2 sizeSmallestFont\">\r\n                        {languagelist}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CardDiv","import react, { useState, useEffect } from \"react\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\n\r\nconst UnityPreviewTable = () => {\r\n\r\n    const [GifData, setGifData] = useState([]);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [filterGifData, setfilterGifData] = useState([]);\r\n\r\n\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Topic',\r\n            selector: row => row.title,\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Demo',\r\n            selector: row => <img src={row.link} loading=\"lazy\" alt=\"SwimmingGif...\" width={220} height={120} />,\r\n            sortable: true,\r\n        },\r\n    ];\r\n    \r\n    \r\n    const url = 'https://raw.githubusercontent.com/DevFrogora/ALL-Project-Preview/master/battleField/api.json'\r\n\r\n    useEffect( () => {\r\n        (async () => {\r\n            try {\r\n                const response = await axios.get(url);\r\n                setGifData(response.data);\r\n                setfilterGifData(response.data);\r\n                console.log(response.data)\r\n\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        })()\r\n    }, [])\r\n\r\n    useEffect( () =>{\r\n        const result = GifData.filter( (eachGifData)=>{\r\n            return eachGifData.title.toLowerCase().match(search.toLowerCase());\r\n        })\r\n\r\n        setfilterGifData(result)\r\n    },[search])\r\n\r\n    return (<DataTable\r\n        title =\"Preview Of Unity Project\"\r\n        columns={columns}\r\n        data={filterGifData}\r\n        pagination\r\n        fixedHeader\r\n        fixedHeaderScrollHeight=\"400px\"\r\n        highlightOnHover\r\n        subHeader\r\n        subHeaderComponent = {\r\n            <input type=\"text\" placeholder=\"Search Topic\" \r\n            className=\"w-55 form-control\"\r\n            value={search}\r\n            onChange={ (e) => setSearch(e.target.value)}\r\n            />\r\n        }\r\n    />)\r\n};\r\n\r\nexport default UnityPreviewTable","import React, { Component } from 'react'\r\nimport RepoDivCard from './RepoDivCard'\r\nimport CardDiv from './CardDiv'\r\nimport UnityPreviewTable from './PorjectPreview/UnityPreviewTable';\r\nimport \"../../../../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\n/**\r\n * read more about json\r\n * https://mkyong.com/javascript/how-to-access-json-object-in-javascript/#:~:text=Below%20is%20a%20JSON%20string.&text=To%20access%20the%20JSON%20object,%E2%80%9D%20or%20%E2%80%9C%5B%5D%E2%80%9D.\r\n */\r\n\r\nvar data = {\r\n    projectlist: [{\r\n        projectId: 1,\r\n        projectName: \"Offline Library Management System\",\r\n        projectDescription: \"⚪ Offline database 📚\",\r\n        projectLanguages: ['java', 'html', 'php'],\r\n        projectExecutableLink: \"React\",\r\n        projectSourceLink: \"\",\r\n        projectDocsLink: \"\",\r\n        projectCoverImageLink: \"https://media.discordapp.net/attachments/785143854705672223/843013010347261972/6c6a6a95e713d927ee884dbdd5f48283.png\"\r\n    },\r\n    {\r\n        projectId: 2,\r\n        projectName: \"Online Library Management System\",\r\n        projectDescription: \"🟢 online database  📚\",\r\n        projectLanguages: ['csharp', 'cpp', 'php'],\r\n        projectExecutableLink: \"React\",\r\n        projectSourceLink: \"\",\r\n        projectDocsLink: \"\",\r\n        projectCoverImageLink: \"https://media.discordapp.net/attachments/785143854705672223/843013010347261972/6c6a6a95e713d927ee884dbdd5f48283.png\"\r\n    }\r\n    ]\r\n};\r\n\r\nvar json = JSON.parse(JSON.stringify(data));\r\nclass ProjectRepo extends Component {\r\n    render() {\r\n        let username = \"DevFrogora\";\r\n       \r\n        return (\r\n            <div >\r\n                <RepoDivCard Username={username} Repo=\"LibraryManagementSystem\" />\r\n                <RepoDivCard Username={username} Repo=\"OnlineLibraryManagementSystem\" />\r\n                <RepoDivCard Username={username} Repo=\"DiscordSwing\" />\r\n                <RepoDivCard Username={username} Repo=\"GUIForChatiingApplication\" />\r\n                <RepoDivCard Username={username} Repo=\"StructuredWebsiteInPhp\" />\r\n                <br />\r\n                {/* <CardDiv projName={json.projectlist[0].projectName}\r\n                    projDescription= {json.projectlist[0].projectDescription}\r\n                    projLanguages={json.projectlist[0].projectLanguages}\r\n                    projCoverImageLink={json.projectlist[0].projectCoverImageLink}\r\n                    projExecutableLink={json.projectlist[0].projectExecutableLink}\r\n                    projSourceLink={json.projectlist[0].projectSourceLink}\r\n                    projDocsLink={json.projectlist[0].projectDocsLink}\r\n                /> */}\r\n                 <h2>Non-Github Repo</h2>\r\n                <p>..............</p>\r\n                {json.projectlist.map(project => {\r\n\r\n                    return (\r\n                        <CardDiv key={project.projectId} projName={project.projectName}\r\n                            projDescription={project.projectDescription}\r\n                            projLanguages={project.projectLanguages}\r\n                            projCoverImageLink={project.projectCoverImageLink}\r\n                            projExecutableLink={project.projectExecutableLink}\r\n                            projSourceLink={project.projectSourceLink}\r\n                            projDocsLink={project.projectDocsLink}\r\n                        />\r\n                    )\r\n\r\n                })}\r\n                <br/>\r\n                <h2> Preview of Making Game</h2>\r\n                <UnityPreviewTable/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectRepo\r\n","import React, { Component } from 'react'\r\nimport InlineImageText from './Template/InlineImageText'\r\nimport ProjectRepo from './Projects/ProjectRepo'\r\nimport './Projects/projects.css'\r\nimport { PersonalDataConsumer } from '../personalDataContext'\r\n\r\nclass Projects extends Component {\r\n    render() {\r\n        // const githubRepoApi= https://api.github.com/repos/{username}/{reponame}\r\n        let githubImageLink=\"https://media.discordapp.net/attachments/658935195403026432/836824730459570196/github-logo_icon-icons.com_73546.png\";\r\n        let mailBoxImageLink=\"https://media.discordapp.net/attachments/658935195403026432/836885946670645268/Vector-Mailbox-Transparent-Background-PNG.png\";\r\n        let locationImageLink=\"https://media.discordapp.net/attachments/658935195403026432/836886495033425930/Daco_150510.png\"\r\n        return (\r\n            <div className=\"parent\">\r\n                <div className=\"split1 left\">\r\n                    <div className=\"centered\">\r\n                        <img className=\"logoImage\" src=\"https://media.discordapp.net/attachments/658935195403026432/836824740327850024/github_logo_icon_143772.png\" alt=\"Avatar woman\" />\r\n                        <h2 className=\"githubText\">Github</h2>\r\n                        <InlineImageText imageLink={githubImageLink} text=\"@github\" width=\"24px\" height=\"24px\" redirectLink=\"https://github.com/DevFrogora\"/>\r\n                        <PersonalDataConsumer>\r\n                                    {\r\n                                        (JsonData) => {\r\n                                            return <span>\r\n                                                {/* <InlineImageText imageLink={mailBoxImageLink} text={JsonData.email} width=\"18px\" height=\"18px\"/> */}\r\n                                                <InlineImageText imageLink={mailBoxImageLink} text=\"ruhitrai1997@gmail.com\" width=\"18px\" height=\"18px\"/>\r\n                                            </span>\r\n                                        }\r\n                                    }\r\n                                </PersonalDataConsumer>\r\n                        \r\n                        <InlineImageText imageLink={locationImageLink} text=\"Guwahati Assam , India\" width=\"18px\" height=\"18px\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"split2 right\">\r\n                    <div className=\"contentStyle shiftLeft\">\r\n                        <h2>My Projects</h2>\r\n                        <p>Github repositories that I've built.</p>\r\n                        <ProjectRepo />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Projects\r\n","import React, { Component } from 'react'\r\nimport experienceCss from \"./experienceLayout.module.css\"\r\nimport \"./reset.css\"\r\nlet jobsList = []\r\nlet buttonList = []\r\nlet data = {\r\n\r\n    // companies: [{\r\n    //     id: 1,\r\n    //     companyName: \"Google\",\r\n    //     companySiteLink: \"\",\r\n    //     jobTitles: \"software engg 1\",\r\n    //     JoinTimeStamp: 213,\r\n    //     leaveTimeStamp: 12312,\r\n    //     jobs: [\"Google what you developed or achieved or worked 1\",\r\n    //         \"Google what you developed or achieved or worked 2\",\r\n    //         \"Google what you developed or achieved or worked 3\"]\r\n    // }, {\r\n    //     id: 2,\r\n    //     companyName: \"MicroSoft\",\r\n    //     companySiteLink: \"\",\r\n    //     jobTitles: \"software engg 2\",\r\n    //     JoinTimeStamp: 213,\r\n    //     leaveTimeStamp: 12312,\r\n    //     jobs: [\"MicroSoft job1\", \" MicroSoft job2\", \" MicroSoft job3\"]\r\n\r\n    // }, {\r\n    //     id: 3,\r\n    //     companyName: \"Infosys\",\r\n    //     companySiteLink: \"\",\r\n    //     jobTitles: \"software engg 3\",\r\n    //     JoinTimeStamp: 213,\r\n    //     leaveTimeStamp: 12312,\r\n    //     jobs: [\"Infosys job1\", \"Infosys job2\", \"Infosys job3\"]\r\n    // }]\r\n\r\n}\r\nlet json = JSON.parse(JSON.stringify(data));\r\nclass ExperienceLayout extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: 1,\r\n            companyName: \"Infosys\",\r\n            companySiteLink: \"\",\r\n            jobTitles: \"software engg\",\r\n            JoinTimeStamp: 213,\r\n            leaveTimeStamp: 12312,\r\n            jobs: [],\r\n            buttonListState: [],\r\n            active: 1,\r\n\r\n        }\r\n    }\r\n\r\n    handleOnCompanySlect = (e) => {\r\n        let buttonValue = e.target.value;\r\n        while (jobsList.length) {\r\n            jobsList.pop();\r\n        }\r\n\r\n        {\r\n            json.companies.map(company => {\r\n                if (buttonValue === company.companyName) {\r\n                    this.setState({\r\n                        id: company.id,\r\n                        companyName: company.companyName,\r\n                        jobTitles: company.jobTitles,\r\n                        companySiteLink: company.companySiteLink,\r\n                        JoinTimeStamp: company.JoinTimeStamp,\r\n                        leaveTimeStamp: company.leaveTimeStamp,\r\n                        jobs: company.jobs\r\n                        // buttonListState: [],\r\n                    })\r\n                    company.jobs.forEach((job, index) => {\r\n                        jobsList.push(<li key={index} className={experienceCss.li}>{job}</li>)\r\n                    })\r\n                    this.setState({\r\n                        jobs: jobsList,\r\n                        active: company.id\r\n                    }, () => {\r\n                        //finished\r\n                        this.reLoadButtonList()\r\n                    })\r\n\r\n                }\r\n\r\n            })\r\n\r\n            console.log(this.state.active)\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n    reLoadButtonList() {\r\n        console.log(\"reloadButton\")\r\n        while (buttonList.length) {\r\n            buttonList.pop();\r\n        }\r\n        json.companies.map((company) => {\r\n\r\n            buttonList.push(<button key={company.id} className={experienceCss.button}\r\n                className={this.state.active === company.id ? experienceCss.active : experienceCss.button}\r\n                onClick={this.handleOnCompanySlect}\r\n                value={company.companyName}>{company.companyName}</button>)\r\n\r\n        })\r\n\r\n        this.setState({\r\n            buttonListState: buttonList\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        while (buttonList.length) {\r\n            buttonList.pop();\r\n        }\r\n        while (jobsList.length) {\r\n            jobsList.pop();\r\n        }\r\n        json.companies.map((company) => {\r\n\r\n            buttonList.push(<button key={company.id} className={experienceCss.button}\r\n                className={this.state.active === company.id ? experienceCss.active : experienceCss.button}\r\n                onClick={this.handleOnCompanySlect}\r\n                value={company.companyName}>{company.companyName}</button>)\r\n\r\n        })\r\n\r\n        this.setState({\r\n            buttonListState: buttonList\r\n        })\r\n        json.companies.map(company => {\r\n            if (this.state.active === company.id) {\r\n                this.setState({\r\n                    id: company.id,\r\n                    companyName: company.companyName,\r\n                    jobTitles: company.jobTitles,\r\n                    companySiteLink: company.companySiteLink,\r\n                    JoinTimeStamp: company.JoinTimeStamp,\r\n                    leaveTimeStamp: company.leaveTimeStamp,\r\n                    jobs: company.jobs\r\n                    // buttonListState: [],\r\n                })\r\n                company.jobs.forEach((job, index) => {\r\n                    jobsList.push(<li key={index+1} className={experienceCss.li}>{job}</li>)\r\n                })\r\n                this.setState({\r\n                    jobs: jobsList,\r\n                    active: company.id\r\n                }, () => {\r\n                    //finished\r\n                    console.log(\"componentDIdMount\")\r\n                    this.reLoadButtonList()\r\n                })\r\n\r\n            }\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        if(json.companies.length){\r\n            return (\r\n                <div>\r\n                    <div className={experienceCss.cardBlock}>\r\n                        <div className={experienceCss.card}>\r\n    \r\n                            <div className={experienceCss.row}>\r\n                                <div className={`${experienceCss.column} ${experienceCss.grow1}`}>\r\n                                    <div className={experienceCss.companyName}>\r\n                                        \r\n                                        {this.state.buttonListState}\r\n                                    </div>\r\n                                </div>\r\n                                <div className={`${experienceCss.column} ${experienceCss.grow2}`}>\r\n                                    <div className={experienceCss.content}>\r\n                                        <div className={experienceCss.header}>\r\n                                            <h2 > {this.state.jobTitles} <a  className={experienceCss.siteLink} href={this.state.companySiteLink}> @ {this.state.companyName} </a> </h2>\r\n                                            <span className={experienceCss.timestamp}> {this.state.JoinTimeStamp} - {this.state.leaveTimeStamp}</span>\r\n                                        </div>\r\n                                        <ul className={`${experienceCss.Projectslinks} ${experienceCss.sizeSmallFont}`}>\r\n                                            {/* <li className={experienceCss.li}>what you developed or achieved or worked</li>\r\n                                            <li className={experienceCss.li}>what you developed or achieved or worked</li>\r\n                                            <li className={experienceCss.li}>what you developed or achieved or worked</li> */}\r\n                                            {this.state.jobs}\r\n                                            {/* {this.state.active} */}\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(<div>Locked</div>)\r\n        }\r\n       \r\n    }\r\n}\r\n\r\nexport default ExperienceLayout\r\n","import React, { Component } from 'react'\r\nimport { PersonalDataConsumer } from '../personalDataContext'\r\nimport ExperienceLayout from './Experience/ExperienceTemplate/ExperienceLayout'\r\nimport InlineImageText from './Template/InlineImageText'\r\n\r\nclass Experience extends Component {\r\n    \r\n    render() {\r\n        // var obj =[];\r\n        var experience= false;\r\n        let lockImageLink=\"https://media.discordapp.net/attachments/761943789593952299/904975406749327360/unknown.png\";\r\n        if(experience){\r\n            return (\r\n                <div>\r\n                    <ExperienceLayout />\r\n                </div>\r\n            )\r\n        }else{\r\n            return (\r\n                <div>\r\n                    {/* text=\"<h2>No Expericence</h2>\" */}\r\n                    <InlineImageText imageLink={lockImageLink}  width=\"40px\" height=\"40px\">\r\n                    <h2>No Expericence</h2>\r\n                    </InlineImageText>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default Experience\r\n\r\n\r\n// No Experience\r\n// {/* <ServletGetRequest /> */}\r\n// <PersonalDataConsumer>\r\n//     {\r\n//         (JsonData) =>{\r\n//          return <div>\r\n//          Name : {JsonData.name} <br/>\r\n//          Email : {JsonData.email}\r\n//           </div> \r\n//         }\r\n//     }\r\n// </PersonalDataConsumer>","import React, { PureComponent } from 'react'\r\nimport \"./contact.css\"\r\nimport axios from 'axios'\r\n\r\n\r\nclass ContactMetaData extends PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            totalCount: 0,\r\n            pendingCount: 0,\r\n            falseCount: 0,\r\n            canContact: \"no\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //   setInterval(()=>{\r\n\r\n        axios.get('http://localhost:8080/FirstServlet/getContactData')\r\n            .then(response => {\r\n                let respObj = response.data;\r\n                    this.setState({\r\n                        totalCount: respObj.totalCount,\r\n                        pendingCount: respObj.pendingCount,\r\n                        falseCount: respObj.falseCount,\r\n                        canContact: respObj.canContact\r\n                    })\r\n            })\r\n            .catch(e => console.log(e))\r\n        //  },2000)\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setState({\r\n            mounted: false\r\n        })\r\n    }\r\n\r\n\r\n\r\n    handleOnChange = () => {\r\n        setTimeout(() => {\r\n            axios.get('http://localhost:8080/FirstServlet/getContactData')\r\n                .then(response => {\r\n                    let respObj = response.data;\r\n                    console.log(\"run from handleOnChnage on Button submit\")\r\n\r\n                    this.setState({\r\n                        totalCount: respObj.totalCount,\r\n                        pendingCount: respObj.pendingCount,\r\n                        falseCount: respObj.falseCount,\r\n                        canContact: respObj.canContact\r\n                    })\r\n\r\n                })\r\n                .catch(e => console.log(e))\r\n        }, 3000);\r\n    }\r\n\r\n    render() {\r\n        console.log(\"ContactMetaData--Render --updated\");\r\n        return (\r\n\r\n            <div>\r\n                <div className=\"metaData_List\" >\r\n                    <div className=\"metaData_container\">\r\n                        <span className=\"metaData_key\">Total Message</span>\r\n                        <span className=\"metaData_value\"> {this.state.totalCount} </span>\r\n                    </div>\r\n                    <div className=\"metaData_container\">\r\n                        <span className=\"metaData_key\">Pending Message</span>\r\n                        <span className=\"metaData_value\"> {this.state.pendingCount} </span>\r\n                    </div>\r\n                    <div className=\"metaData_container\">\r\n                        <span className=\"metaData_key\">Can Contact ? </span>\r\n                        <span className=\"metaData_value\"> {this.state.canContact} </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactMetaData\r\n","import React, { Component } from 'react'\r\nimport ContactMetaData from './Contact/ContactMetaData'\r\nimport \"./Contact/contactForm.css\"\r\nimport axios from 'axios'\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.child = React.createRef();\r\n        this.state = {\r\n            username: '',\r\n            email: '',\r\n            message: '',\r\n            message_type: '',\r\n            form_status: '',\r\n            form_status_message: '',\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleUsernameChange = (event) => {\r\n        this.setState({\r\n            username: event.target.value\r\n\r\n        })\r\n    }\r\n\r\n    handleEmailChange = (event) => {\r\n        this.setState({\r\n            email: event.target.value\r\n        })\r\n    }\r\n\r\n    handleMessageChange = (event) => {\r\n        this.setState({\r\n            message: event.target.value\r\n        })\r\n    }\r\n\r\n    handleMsgTypeChange = (event) => {\r\n        this.setState({\r\n            message_type: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n            //            && typeof (this.state.message_priority) != \"undefined\"\r\n        if (this.state.username !=='' && this.state.email !==''\r\n\r\n            && this.state.message !== '' && this.state.message_type !== '') {\r\n\r\n            alert(`${this.state.username} ${this.state.email} ${this.state.message} ${this.state.message_type}`)\r\n                console.log(this.state);\r\n            this.setState(prevState => ({\r\n                // form_status: '',\r\n                form_status: 'form_status_success',\r\n                form_status_message: 'send done'\r\n\r\n            }))\r\n\r\n            var config = {\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n            };\r\n\r\n            let data= {\r\n                username : this.state.username,\r\n                email : this.state.email,\r\n                message : this.state.message,\r\n                message_type : this.state.message_type\r\n                }\r\n            \r\n            console.log(data)\r\n            axios.post('http://localhost:8080/FirstServlet/setContactData', data, config)\r\n            .then(response => {\r\n                // console.log(response.data)\r\n                // console.log(this.state)\r\n\r\n            })\r\n            .catch(e => console.log(e))\r\n             event.preventDefault();\r\n\r\n        } else {\r\n            event.preventDefault();\r\n            alert('empty');\r\n            this.setState(prevState => ({\r\n                // form_status: '',\r\n                form_status: 'form_status_failed',\r\n                form_status_message: 'send failed'\r\n            }))\r\n            console.log(`${this.state.form_status_message}`)\r\n        }\r\n    }\r\n\r\n    handleToRefresh = () => {\r\n        this.child.current.handleOnChange();\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(\"Contact Parent data\");\r\n\r\n        return (\r\n            <div >\r\n                <p className=\"my_message\">\r\n                    <span>\r\n                        My inbox is always open. Whether you have a question or just want to say hi, I'll try my best to get back to you!\r\n                    </span>\r\n                </p>\r\n                <ContactMetaData   ref={this.child} />\r\n                <div className=\"form_container\">\r\n                    <form onSubmit={this.handleSubmit} > \r\n                        <div>\r\n                            <div className=\"form_username\">\r\n                                <input\r\n                                    placeholder=\"UserName\"\r\n                                    type=\"text\"\r\n                                    value={this.state.username}\r\n                                    onChange={this.handleUsernameChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form_email\">\r\n                                <input\r\n                                    placeholder=\"Email\"\r\n                                    type=\"email\"\r\n                                    value={this.state.email}\r\n                                    onChange={this.handleEmailChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form_message\">\r\n                                <textarea\r\n                                    placeholder=\"message\"\r\n                                    value={this.state.message}\r\n                                    onChange={this.handleMessageChange}>\r\n                                </textarea>\r\n                            </div>\r\n                            <div className=\"form_status\">\r\n                                <div className={this.state.form_status === \"form_status_success\" ? \"form_status_success\" : \"form_status_failed\"}>\r\n                                    {this.state.form_status_message}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form_msgtype\">\r\n                                <label className=\"form_msgtype_lable\" > Message Type </label>\r\n                                <select value={this.state.message_type} onChange={this.handleMsgTypeChange}\r\n                                    className=\"form_msgtype_selector\">\r\n                                    <option value=\"Urgent\">Urgent</option>\r\n                                    <option value=\"Hiring\">Hiring</option>\r\n                                    <option value=\"Greeting\">Greeting</option>\r\n                                    <option value=\"Spam\">Spamming</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"submit_btn\" type=\"submit\" onClick={this.handleToRefresh}>Submit</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact\r\n","import React, { Component } from 'react'\r\nimport './Resume/ResumeTable.css'\r\nclass Resume extends Component {\r\n    handleDownloadingPDF = (event) => {\r\n        var navElement= document.getElementsByTagName(\"nav\");\r\n        document.title = \"\"\r\n        for(var i=0; i< navElement.length; i++)\r\n        {\r\n            // navElement[i].style.visibility = 'hidden';\r\n            navElement[i].style.display = 'none';\r\n        }\r\n        let phoneNumber = prompt(\"Please enter your phoneNumber\", \"6464464658\");\r\n        document.getElementById(\"phoneNumber\").innerHTML = phoneNumber;\r\n        document.getElementById(\"h1resume\").style.display = \"\";\r\n        window.print();\r\n        //reset\r\n        for(var i=0; i< navElement.length; i++)\r\n        {\r\n            // navElement[i].style.visibility = 'visible';\r\n            navElement[i].style.display = '';\r\n        }\r\n        document.title = \"Portfolio\"\r\n        document.getElementById(\"phoneNumber\").innerHTML = \"93xxxxxxxx\";\r\n        document.getElementById(\"h1resume\").style.display = \"none\";\r\n    }\r\n\r\n\r\n    render() {\r\n        const headingResumeStyle = {\r\n            color: \"\",\r\n            textAlign: \"center\",\r\n            // fontFamily: \"Arial\"\r\n            display : \"none\"\r\n          };\r\n        \r\n        return (\r\n            <div>\r\n                <h1 id=\"h1resume\" style={headingResumeStyle}> Resume</h1>\r\n                <table>\r\n                    <tr className=\"Heading\">\r\n                        <td className=\"TopColumn\">\r\n                            <b> Ruhit Rai </b>  <br />\r\n                            BCA <br />\r\n                            Asian Institute of Management and Technology\r\n                        </td>\r\n                        <td>\r\n                            Phone - +91-<span id='phoneNumber'>93xxxxxxxx</span> <br />\r\n                            Email - ruhitrai1997@gmail.com <br />\r\n                            Address : 51A, Narengi Tiniali , Guwahti , Assam - 781026\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"Education resumeSection\" >\r\n                        <td colspan=\"2\">\r\n                            <h3>  <b> Education  </b> </h3>\r\n                            <table className=\"interTable\">\r\n                                <tr>\r\n                                    <td className=\"TopColumn\">\r\n                                        2017-20\r\n                                    </td>\r\n                                    <td>\r\n                                        Bachelor of Computer And Technology <br />\r\n                                        Asian Institute of Management and Technology\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"resumeSection\">\r\n                        <td colspan=\"2\">\r\n                            <h3>  <b> Technical Skills  </b> </h3>\r\n                            <table >\r\n                                <tr>\r\n                                    <td className=\"TopColumn\">\r\n                                        Languages\r\n                                    </td>\r\n                                    <td>\r\n                                        C,C++,Java,C#,PHP,HTML,JavaScript,CSS\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"TopColumn\">\r\n                                        Tools\r\n                                    </td>\r\n                                    <td>\r\n                                        Git,Docker,maven,gradle,Blender\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"TopColumn\">\r\n                                        Technologies\r\n                                    </td>\r\n                                    <td>\r\n                                        MySQL,Servlet,JSP ,Unity, Opencv , Arduino\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"TopColumn\">\r\n                                        SDK\r\n                                    </td>\r\n                                    <td>\r\n                                        Android-SDK\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"resumeSection\">\r\n                        <td colspan=\"2\">\r\n                            <h3>  <b> Academic Projects  </b> </h3>\r\n                            <table >\r\n                                <tr>\r\n                                    <td className=\"TopColumn\">\r\n                                        feb-jun 18\r\n                                    </td>\r\n                                    <td>\r\n                                        <b>Library Management System Offline</b> ( BCA Project, 4th Semester) <br />\r\n                                        ➡ Used to store book and member details as well as Borrow & Return Records <br />\r\n                                        ➡ Technology : Java (Swing For GUI), Mysql (For DB) <br />\r\n                                        ➡ Platform : Cross Platform\r\n                                    </td>\r\n\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"TopColumn\">\r\n                                        Aug-dec 20\r\n                                    </td>\r\n                                    <td>\r\n                                        <b>Library Management System Online</b> ( BCA Project, 6th Semester) <br />\r\n                                        ➡ Used to store book and member details as well as Borrow & Return Records <br />\r\n                                        ➡ Technology : Java (Swing For GUI), Mysql (For DB) ,PHP <br />\r\n                                        ➡ Platform : Cross Platform <br />\r\n                                        ➡ Addition : Android Application to access details about Members\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </table>\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"resumeSection\">\r\n                        <td colspan=\"2\">\r\n                            <h3>  <b> Other Projects  </b> </h3>\r\n                            Github profile : https://github.com/DevFrogora\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            <button onClick={this.handleDownloadingPDF}>Download As PDF</button>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resume\r\n","import axios from 'axios'\r\n\r\nlet JsonData ;\r\n\r\nconst request = new XMLHttpRequest();\r\nrequest.addEventListener('readystatechange', () => {\r\n    if(request.readyState === 4){\r\n        console.log(request.responseText)\r\n         return request.responseText;\r\n    }\r\n})\r\nfunction sendRequest() {\r\n     \r\n    request.open('GET','http://localhost:8080/FirstServlet/pqr');\r\n    request.send();\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport  {sendRequest}\r\n","import React, { Component } from 'react'\r\nimport \"./css/TextBox.css\"\r\n\r\nclass TextBoxWithInputField extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             name:\"\",\r\n             email:\"\",\r\n             currentWorking:''\r\n        }\r\n    }\r\n    \r\n    handleOnChange = (e)=>{\r\n            this.props.setStateOfParent(e)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"textbox_container\" >\r\n                    <span className=\"textbox_name\">{this.props.text} : </span>\r\n                    {/* <input  className=\"textbox_name\" type=\"text\" readonly=\"readonly\" value={this.props.text} /> */}\r\n                    <input className=\"textbox_feild\" value={this.props.value} onChange={this.handleOnChange}\r\n                            name ={this.props.name}></input>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TextBoxWithInputField\r\n","import React, { Component } from 'react'\r\nimport TextBoxWithInputField from './TextBoxWithInputField'\r\nimport axios from 'axios'\r\nimport \"./css/adminSetting.css\"\r\nimport PersonalDataContext, { PersonalDataConsumer } from '../../personalDataContext'\r\n\r\nclass MyDataConfig extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            currentWorking: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let jsonObject = this.context\r\n        this.setState({\r\n            name: jsonObject.name,\r\n            email: jsonObject.email,\r\n            currentWorking: jsonObject.currentWorking\r\n        })\r\n\r\n    }\r\n\r\n    handleOnClick = (e) => {\r\n        // alert(`${this.state.name} ${this.state.email} ${this.state.currentWorking}`)\r\n        if (this.state.name != '' && this.state.email != ''\r\n            && this.state.currentWorking != '') {\r\n            // axios(options);\r\n            var config = {\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n            };\r\n\r\n            axios.post('http://localhost:8080/FirstServlet/setPersonalData', this.state, config)\r\n                .then(response => {\r\n                    // console.log(response.data)\r\n                    // console.log(this.state)\r\n                })\r\n                .catch(e => console.log(e))\r\n            e.preventDefault();\r\n        } else {\r\n            e.preventDefault();\r\n            alert('wrong');\r\n            // console.log(`${this.state.form_status_message}`)\r\n        }\r\n    }\r\n\r\n    setStateOfParent = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"config_List\">\r\n                    <div className=\"config_Item\"> <TextBoxWithInputField text=\"Name\" value={this.state.name}\r\n                        name=\"name\" setStateOfParent={this.setStateOfParent} /> </div>\r\n                    <div className=\"config_Item\"> <TextBoxWithInputField text=\"Email\" value={this.state.email}\r\n                        name=\"email\" setStateOfParent={this.setStateOfParent} /> </div>\r\n                    <div className=\"config_Item\"> <TextBoxWithInputField text=\"CurrentWorking\" value={this.state.currentWorking}\r\n                        name=\"currentWorking\" setStateOfParent={this.setStateOfParent} /> </div>\r\n                    <button onClick={this.handleOnClick} >Save</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nMyDataConfig.contextType = PersonalDataContext\r\n\r\nexport default MyDataConfig\r\n","import React, { Component } from 'react'\r\nimport \"./css/messageTemplate.css\"\r\nimport axios from 'axios'\r\n\r\n\r\nclass MessageTemplate extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            date: ''\r\n        }\r\n    }\r\n\r\n    handleOnDone = (e) => {\r\n        let data = {\r\n            date: this.state.date\r\n        }\r\n        console.log(data)\r\n\r\n        var config = {\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n        };\r\n\r\n        axios.post('http://localhost:8080/FirstServlet/SetContactDone', data, config)\r\n            .then(response => {\r\n                // console.log(response.data)\r\n                // console.log(this.state)\r\n                console.log(\"done\")\r\n                this.props.Refresh();\r\n            })\r\n            .catch(e => console.log(e))\r\n        e.preventDefault();\r\n\r\n    }\r\n\r\n    handleOnDelete = (e) => {\r\n        let data = {\r\n            date: this.state.date\r\n        }\r\n        console.log(data)\r\n\r\n        var config = {\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n        };\r\n\r\n        axios.post('http://localhost:8080/FirstServlet/SetContactDelete', data, config)\r\n            .then(response => {\r\n                console.log(\"deleted \",this.state.date)\r\n                this.props.Refresh();\r\n            })\r\n            .catch(e => console.log(e))\r\n        e.preventDefault();\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            date: this.props.TimeStamp\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"message_container\">\r\n                    <div className=\"message_header\">\r\n                        <div className=\"message_username\"> {this.props.Username}</div>\r\n                        <div className=\"message_date\"> {this.props.Date}</div>\r\n                    </div>\r\n                    {/* {console.log(this.props.TimeStamp)} */}\r\n                    <div className=\"message_body\">\r\n                        <div className=\"message_data\"> {this.props.Message}</div>\r\n                        <div className=\"message_operation\">\r\n                            <button className=\"message_done\" onClick={this.handleOnDone}>Done</button>\r\n                            <button className=\"message_delete\" onClick={this.handleOnDelete}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageTemplate\r\n","import React, { Component } from 'react'\r\nimport MessageTemplate from './MessageTemplate'\r\nimport axios from 'axios'\r\n\r\n\r\nclass ContactMessages extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            links: [],\r\n            pending: 'true'\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:8080/FirstServlet/getContactDataInAdmin')\r\n            .then(response => {\r\n                console.log(response.data)\r\n                this.setState({\r\n                    links: response.data\r\n                })\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    }\r\n\r\n    handleOnRefresh = () => {\r\n        axios.get('http://localhost:8080/FirstServlet/getContactDataInAdmin')\r\n            .then(response => {\r\n                console.log(response.data)\r\n                this.setState({\r\n                    links: response.data\r\n                })\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    handleOnToggleShow = () => {\r\n        if (this.state.pending === 'true') {\r\n            this.setState({\r\n                pending: 'false'\r\n            })\r\n        } else {\r\n            this.setState({\r\n                pending: 'true'\r\n            })\r\n        }\r\n        this.handleOnRefresh();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <button onClick={this.handleOnRefresh}>Refresh</button>\r\n                <button onClick={this.handleOnToggleShow}> Pending : {this.state.pending}</button>\r\n                {this.state.links.map(link => {\r\n                    if (this.state.pending === 'true') {\r\n                        if (link.pending) {\r\n                            let date = new Date(link.date)\r\n                            let dateTimeString = date.toLocaleDateString('en-GB') + \" \" + date.toLocaleTimeString()\r\n                            return (<MessageTemplate key={link.date} Username={link.username} Date={dateTimeString} Message={link.message} TimeStamp={link.date} Refresh={this.handleOnRefresh} />)\r\n                        }\r\n                    } else {\r\n                        if (!link.pending) {\r\n                            let date = new Date(link.date)\r\n                            let dateTimeString = date.toLocaleDateString('en-GB') + \" \" + date.toLocaleTimeString()\r\n                            return (<MessageTemplate key={link.date} Username={link.username} Date={dateTimeString} Message={link.message} TimeStamp={link.date} Refresh={this.handleOnRefresh} />)\r\n                        }\r\n                    }\r\n\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactMessages\r\n","import React, { Component } from 'react'\r\nimport \"./css/canContact.css\"\r\nimport axios from 'axios'\r\n\r\nclass CanContact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isChecked: true,\r\n            answer: 'yes'\r\n        };\r\n    }\r\n\r\n    toggleChange = () => {\r\n        this.setState({\r\n            isChecked: !this.state.isChecked,\r\n        }, () => {\r\n            if (this.state.isChecked) {\r\n                console.log(\"yes can Contact\")\r\n                this.setState({\r\n                    isChecked: true,\r\n                    answer: 'yes',\r\n                });\r\n\r\n                this.postReq(\"yes\");\r\n            } else {\r\n                this.setState({\r\n                    isChecked: false,\r\n                    answer: 'no',\r\n                });\r\n                this.postReq(\"no\");\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:8080/FirstServlet/getContactOrNot')\r\n            .then(response => {\r\n                let respObj = response.data;\r\n                console.log(respObj)\r\n                if (respObj === 'yes') {\r\n                    this.setState({\r\n                        isChecked: true,\r\n                        answer: 'yes'\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        isChecked: false,\r\n                        answer: 'no'\r\n                    });\r\n                }\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    postReq = (setData) => {\r\n        let data = {\r\n            contact: setData\r\n        }\r\n        console.log(data)\r\n\r\n        var config = {\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n        };\r\n\r\n        axios.post('http://localhost:8080/FirstServlet/SetContactOrNot', data, config)\r\n            .then(response => {\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <label>Can Contact ?----\r\n                <input type=\"checkbox\"\r\n                    defaultChecked={this.state.isChecked}\r\n                    onChange={this.toggleChange}\r\n                />\r\n                {this.state.answer}\r\n            </label>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CanContact\r\n","import React, { Component } from 'react'\r\nimport TextBoxWithInputField from './TextBoxWithInputField'\r\nimport axios from 'axios'\r\nimport \"./css/adminSetting.css\"\r\nimport PersonalDataContext, { PersonalDataConsumer } from '../../personalDataContext'\r\nimport MyDataConfig from './MyDataConfig'\r\nimport ContactMessages from './ContactMessages'\r\nimport CanContact from './CanContact'\r\n\r\nclass AdminSetting extends Component {\r\n\r\n    render() {\r\n        // const { name, email, currentWorking } = this.state;\r\n        return (\r\n            <div>\r\n                Admin Page\r\n                <br />\r\n                <span className=\"config_header\">Set the config. </span><br />\r\n                <div className=\"setting_list\">\r\n                   <MyDataConfig/> \r\n                </div>\r\n                \r\n                <br/>\r\n                <span className=\"config_header\"> Contact Messages </span><br />\r\n                <CanContact />\r\n                <div className=\"contact_list\">\r\n                   <ContactMessages/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AdminSetting\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport AdminSetting from './AdminSetting'\r\n\r\nclass Admin extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            result:''\r\n        }\r\n    }\r\n\r\n    handleUsernameChange = (event) => {\r\n        this.setState({\r\n            username: event.target.value\r\n        })\r\n    }\r\n\r\n    handlePasswordChange = (event) => {\r\n        this.setState({\r\n            password: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        if (this.state.username != '' && this.state.password != '') {\r\n            // axios(options);\r\n            var config = {\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n              };\r\n\r\n            axios.post('http://localhost:8080/FirstServlet/verifypassword', this.state, config)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                console.log(this.state)\r\n                this.setState({\r\n                     result: response.data //jsonObject\r\n                })\r\n\r\n                console.log(this.state.result)\r\n\r\n            })\r\n            .catch(e => console.log(e))\r\n            \r\n\r\n            event.preventDefault();\r\n        } else {\r\n            event.preventDefault();\r\n            alert('wrong');\r\n            console.log(`${this.state.form_status_message}`)\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if(this.state.result === true ) {\r\n            return(\r\n                <AdminSetting />\r\n            )\r\n        }else{\r\n            return (\r\n                <div>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label>UserName</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            value={this.state.username}\r\n                            onChange={this.handleUsernameChange} >\r\n                        </input><br />\r\n                        <label>Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            value={this.state.password}\r\n                            onChange={this.handlePasswordChange}  >\r\n                        </input><br />\r\n                        <button type=\"submit\">Login </button>\r\n                    </form>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default Admin\r\n","import React, { Component  } from \"react\";\r\nimport \"./App.css\"\r\n\r\n// import NameList from \"./components/NameList\";\r\n// import Stylessheet from \"./components/Stylessheet\";\r\n// import styles from \"./appStyles.module.css\"\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\r\nimport Navbar from \"./components/Navbar\";\r\nimport About from \"./components/pages/About\";\r\nimport Home from \"./components/pages/Home\";\r\nimport Projects from \"./components/pages/Projects\";\r\nimport Experience from \"./components/pages/Experience\";\r\nimport Contact from \"./components/pages/Contact\";\r\nimport Resume from \"./components/pages/Resume\";\r\nimport { PersonalDataProvider } from \"./components/personalDataContext\";\r\nimport \"./components/pages/httpRequest/ServletGetRequest\"\r\n// import {sendRequest} from \"./components/pages/httpRequest/ServletGetRequest.js\";\r\nimport axios from 'axios'\r\nimport Admin from \"./components/pages/adminpanel/Admin\";\r\n\r\n\r\n// let Data;\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            PersonalDetails: [] //jsonObject in array\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //    var PersonalDetails = new ServletGetRequest();\r\n        //    let JsonData = PersonalDetails.sendRequest()\r\n        //    console.log(JsonData)\r\n        //    Data= JsonData;\r\n        //    this.setState({\r\n        //        PersonalDetails: JsonData\r\n        //    })\r\n        //    console.log(\"App:  \"+Data)\r\n        //    alert(\"checking\")\r\n\r\n        axios.get('http://localhost:8080/FirstServlet/pqr')\r\n            .then(response => {\r\n                console.log(response.data)\r\n                // Data = JSON.stringify(response.data); //json string\r\n                this.setState({\r\n                    PersonalDetails: response.data //jsonObject\r\n                })\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div className=\"App\">\r\n                    <PersonalDataProvider value={this.state.PersonalDetails}>\r\n                        <Navbar />\r\n                        <Switch>\r\n                            <Route path=\"/dev_porfolio\" exact component={Home} />\r\n                            <Route path=\"/about\" component={About} />\r\n                            <Route path=\"/experience\" component={Experience} />\r\n                            <Route path=\"/projects\" component={Projects} />\r\n                            <Route path=\"/contact\" component={Contact} />\r\n                            <Route path=\"/resume\" component={Resume} />\r\n                            <Route path=\"/admin\" component={Admin} />\r\n                        </Switch>\r\n                    </PersonalDataProvider>\r\n                </div>\r\n            </Router>\r\n        );\r\n        // you can use JSX instead \r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\n\r\nReactDOM.render( <App />,document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"links\":\"navStyle_links__1iHdN\",\"logo\":\"navStyle_logo__mFnUH\",\"forMobile\":\"navStyle_forMobile__1WuCP\",\"navItem\":\"navStyle_navItem__35uEB\",\"dropdown_content\":\"navStyle_dropdown_content__3ca5q\",\"dropdown\":\"navStyle_dropdown__1M4bG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardBlock\":\"experienceLayout_cardBlock__33i_c\",\"card\":\"experienceLayout_card__3Vv67\",\"companyName\":\"experienceLayout_companyName__3zR8o\",\"button\":\"experienceLayout_button__3imLu\",\"active\":\"experienceLayout_active__3arTw\",\"row\":\"experienceLayout_row__3z-k-\",\"column\":\"experienceLayout_column__194pH\",\"grow1\":\"experienceLayout_grow1__1Ub03\",\"grow2\":\"experienceLayout_grow2__3qNkE\",\"header\":\"experienceLayout_header__15Qt4\",\"timestamp\":\"experienceLayout_timestamp__Bk_eU\",\"siteLink\":\"experienceLayout_siteLink__279A3\",\"content\":\"experienceLayout_content__2z_We\",\"sizeSmallFont\":\"experienceLayout_sizeSmallFont__3nVui\",\"sizeSmallestFont\":\"experienceLayout_sizeSmallestFont__Xg1PO\",\"wrap\":\"experienceLayout_wrap__34rid\",\"li\":\"experienceLayout_li__3LP60\"};"],"sourceRoot":""}