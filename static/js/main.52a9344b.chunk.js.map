{"version":3,"sources":["components/navStyle.module.css","components/pages/Experience/ExperienceTemplate/experienceLayout.module.css","components/Navbar.js","components/personalDataContext.js","components/pages/About/HeaderForAbout.js","components/pages/About.js","components/pages/Template/InlineImageText.js","components/pages/Home.js","components/pages/Projects/RepoDivCard.js","components/pages/Projects/Languages.js","components/pages/Projects/CardDiv.js","components/pages/Projects/ProjectRepo.js","components/pages/Projects.js","components/pages/Experience/ExperienceTemplate/ExperienceLayout.js","components/pages/Experience.js","components/pages/Contact/ContactMetaData.js","components/pages/Contact.js","components/pages/Resume.js","components/pages/httpRequest/ServletGetRequest.js","components/pages/adminpanel/TextBoxWithInputField.js","components/pages/adminpanel/MyDataConfig.js","components/pages/adminpanel/MessageTemplate.js","components/pages/adminpanel/ContactMessages.js","components/pages/adminpanel/CanContact.js","components/pages/adminpanel/AdminSetting.js","components/pages/adminpanel/Admin.js","App.js","index.js"],"names":["module","exports","Navbar","linkStyle","color","padding","textDecoration","borderRadius","activeStyle","fontWeight","backgroundColor","classname","navStyle","links","to","style","className","logo","forMobile","dropdown","dropbtn","dropdown_content","exact","navItem","Component","PersonalDataContext","React","createContext","PersonalDataProvider","Provider","PersonalDataConsumer","Consumer","HeaderForAbout","href","src","process","alt","JsonData","name","About","InlineImageText","this","props","imageLink","text","width","height","redirectLink","Home","RepoDivCard","Username","Repo","Languages","language","CardDiv","languagelist","projLanguages","forEach","push","projCoverImageLink","projName","projDescription","projExecutableLink","projSourceLink","projDocsLink","json","JSON","parse","stringify","projectlist","projectId","projectName","projectDescription","projectLanguages","projectExecutableLink","projectSourceLink","projectDocsLink","projectCoverImageLink","ProjectRepo","username","map","project","Projects","email","jobsList","buttonList","companies","id","companyName","companySiteLink","jobTitles","JoinTimeStamp","leaveTimeStamp","jobs","ExperienceLayout","handleOnCompanySlect","e","buttonValue","target","value","length","pop","company","setState","job","index","experienceCss","li","active","reLoadButtonList","console","log","state","buttonListState","button","cardBlock","card","row","column","grow1","grow2","content","header","siteLink","timestamp","Projectslinks","sizeSmallFont","Experience","ContactMetaData","handleOnChange","setTimeout","axios","get","then","response","respObj","data","totalCount","pendingCount","falseCount","canContact","catch","mounted","PureComponent","Contact","handleUsernameChange","event","handleEmailChange","handleMessageChange","message","handleMsgTypeChange","message_type","handleSubmit","alert","prevState","form_status","form_status_message","post","headers","preventDefault","handleToRefresh","child","current","createRef","ref","onSubmit","placeholder","type","onChange","onClick","Resume","handleDownloadingPDF","window","print","colspan","request","XMLHttpRequest","addEventListener","readyState","responseText","TextBoxWithInputField","setStateOfParent","currentWorking","MyDataConfig","handleOnClick","jsonObject","context","contextType","MessageTemplate","handleOnDone","date","Refresh","handleOnDelete","TimeStamp","Date","Message","ContactMessages","handleOnRefresh","handleOnToggleShow","pending","link","dateTimeString","toLocaleDateString","toLocaleTimeString","CanContact","toggleChange","isChecked","answer","postReq","setData","contact","defaultChecked","AdminSetting","Admin","handlePasswordChange","password","result","App","PersonalDetails","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.52a9344b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"links\":\"navStyle_links__1kWeC\",\"logo\":\"navStyle_logo__1uBY4\",\"forMobile\":\"navStyle_forMobile__3Vccs\",\"navItem\":\"navStyle_navItem__1mEzB\",\"dropdown_content\":\"navStyle_dropdown_content__DG5Yi\",\"dropdown\":\"navStyle_dropdown__1i6oq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardBlock\":\"experienceLayout_cardBlock__1aui-\",\"card\":\"experienceLayout_card__fDp17\",\"companyName\":\"experienceLayout_companyName__bBAy5\",\"button\":\"experienceLayout_button__2ezqx\",\"active\":\"experienceLayout_active__3nI29\",\"row\":\"experienceLayout_row__2z8vo\",\"column\":\"experienceLayout_column__zN2wA\",\"grow1\":\"experienceLayout_grow1__10wFu\",\"grow2\":\"experienceLayout_grow2__2Oy5V\",\"header\":\"experienceLayout_header__xoW_i\",\"timestamp\":\"experienceLayout_timestamp___g5aj\",\"siteLink\":\"experienceLayout_siteLink__E3-P0\",\"content\":\"experienceLayout_content__1Ajys\",\"sizeSmallFont\":\"experienceLayout_sizeSmallFont__UaodI\",\"sizeSmallestFont\":\"experienceLayout_sizeSmallestFont__33Ieh\",\"wrap\":\"experienceLayout_wrap__3S9Z0\",\"li\":\"experienceLayout_li__3e3yP\"};","import React, { Component } from 'react'\r\nimport navStyle from './navStyle.module.css'\r\nimport { NavLink, Link } from 'react-router-dom'\r\n\r\nclass Navbar extends Component {\r\n\r\n    render() {\r\n        const linkStyle = {\r\n            color: 'white',\r\n            padding: '0 16px',\r\n            textDecoration: 'none',\r\n            borderRadius: '70px'\r\n        }\r\n        const activeStyle = {\r\n            fontWeight: \"bold\",\r\n            color: \"red\",\r\n            backgroundColor: \"white\"\r\n        }\r\n        let classname = navStyle.links + \" content\" //\r\n        return (\r\n            <div>\r\n                <nav>\r\n                    <Link to=\"/dev_porfolio\" style={linkStyle}>\r\n                        <div className={navStyle.logo}><h1> Frogora Dev </h1></div>\r\n                    </Link>\r\n                    <ul className={classname}>\r\n                        <li className={navStyle.forMobile} >\r\n                        <div className={navStyle.dropdown}>\r\n                            <div className={navStyle.dropbtn}>Menu\r\n                            </div>\r\n                            <div className={navStyle.dropdown_content}>\r\n                            <NavLink  to=\"/about\"> <span> 1. About </span>    </NavLink>\r\n                            <NavLink  to=\"/experience\"> <span> 2. Experience </span>    </NavLink>\r\n                            <NavLink  to=\"/projects\"> <span> 3. Work  </span>   </NavLink>\r\n                            <NavLink  to=\"/contact\"> <span> 4. Contact </span>    </NavLink>\r\n                            </div>\r\n                            </div>\r\n                            </li>\r\n                        <NavLink exact activeStyle={activeStyle} style={linkStyle} to=\"/about\">\r\n                            <li className={navStyle.navItem}><span >1. About</span></li>\r\n                        </NavLink>\r\n                        <NavLink exact activeStyle={activeStyle} style={linkStyle} to=\"/experience\">\r\n                            <li className={navStyle.navItem}><span >2. Experience</span></li>\r\n                        </NavLink>\r\n                        <NavLink exact activeStyle={activeStyle} style={linkStyle} to=\"/projects\">\r\n                            <li className={navStyle.navItem} ><span >3. Projects</span></li>\r\n                        </NavLink>\r\n                        <NavLink exact activeStyle={activeStyle} style={linkStyle} to=\"/contact\">\r\n                            <li className={navStyle.navItem} ><span >4. Contact</span></li>\r\n                        </NavLink>\r\n                        <NavLink exact activeStyle={activeStyle} style={linkStyle} to=\"/resume\">\r\n                            <li className={navStyle.navItem} ><span >5. Resume</span></li>\r\n                        </NavLink>\r\n                        {/* <li className={navStyle.navItem}><span className={navStyle.navItem}>Resume</span></li> */}\r\n\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\n\r\nconst PersonalDataContext = React.createContext()\r\n\r\nconst PersonalDataProvider = PersonalDataContext.Provider\r\nconst PersonalDataConsumer = PersonalDataContext.Consumer\r\n\r\nexport {PersonalDataProvider ,PersonalDataConsumer}\r\nexport default PersonalDataContext","import React, { Component } from 'react'\r\nimport { PersonalDataConsumer } from '../../../components/personalDataContext'\r\nimport \"./about.css\"\r\n\r\nclass HeaderForAbout extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"center\">\r\n                    <a href=\"/images/profilepic.png\">\r\n                        <img className=\"username_pic\" src={process.env.PUBLIC_URL +\"/images/profilepic.png\"} alt=\"FrogoraProfilePic\" />\r\n                    </a>\r\n                    <div className=\"clearfix\">\r\n                        <a href=\"https://www.y.com/\">\r\n                            <h1 className=\"username\">\r\n                                <PersonalDataConsumer>\r\n                                    {\r\n                                        (JsonData) => {\r\n                                            return <div>\r\n                                                {JsonData.name}\r\n                                            </div>\r\n                                        }\r\n                                    }\r\n                                </PersonalDataConsumer>\r\n                            </h1>\r\n                        </a>\r\n                    </div>\r\n                    <h2 className=\"username_description\">\r\n                        Super Excited Developer\r\n                    </h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeaderForAbout\r\n","import React, { Component } from 'react'\r\nimport HeaderForAbout from './About/HeaderForAbout'\r\nimport { PersonalDataConsumer } from '../personalDataContext'\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <HeaderForAbout />\r\n\r\n                <p className=\"about_intro\">Hello! My name is  <PersonalDataConsumer>\r\n                    {\r\n                        (JsonData) => {\r\n                            return <span>\r\n                                {JsonData.name}\r\n                            </span>\r\n                        }\r\n                    }\r\n                </PersonalDataConsumer> and I enjoy creating things that live on the internet.\r\n                     My interest in Desktop , Android Mobile , Backend development  started  in 2017 when I decided to learn BCA </p>\r\n                <div className=\"middle_container\">\r\n\r\n                    <div className=\"skillList\">\r\n                        <div className=\"skillItem\"> C</div>\r\n                        <div className=\"skillItem\"> C++</div>\r\n                        <div className=\"skillItem\"> C#</div>\r\n                        <div className=\"skillItem\"> Java SE </div>\r\n                        <div className=\"skillItem\"> JAVA JDBC</div>\r\n                        <div className=\"skillItem\"> JavaSwing </div>\r\n                        <div className=\"skillItem\"> JavaServlet </div>\r\n                        <div className=\"skillItem\"> Javascript </div>\r\n                        <div className=\"skillItem\"> HTML </div>\r\n                        <div className=\"skillItem\"> CSS </div>\r\n                        <div className=\"skillItem\"> PHP </div>\r\n                        <div className=\"skillItem\"> ajax </div>\r\n                        <div className=\"skillItem\"> Reactjs</div>\r\n                        <div className=\"skillItem\"> Mysql</div>\r\n                        <div className=\"skillItem\"> Unity</div>\r\n                        <div className=\"skillItem\"> Android</div>\r\n                        <div className=\"skillItem\"> firebase</div>\r\n                        <div className=\"skillItem\"> git</div>\r\n                        <div className=\"skillItem\"> Docker</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About\r\n","import React, { Component } from 'react'\r\nimport \"./inlineImageText.css\"\r\n\r\nclass InlineImageText extends Component {\r\n\r\n    render() {\r\n        let { imageLink, text ,width , height,redirectLink } = this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"amazonLink\">\r\n                    <a href={redirectLink}>\r\n                        <img className=\"amazonLink__image\"\r\n                            src={imageLink} width={width} height={height} />\r\n                        <div className=\"amazonLink__text\">{text}</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InlineImageText\r\n","import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport \"./Home/home.css\"\r\nimport InlineImageText from './Template/InlineImageText'\r\nimport { PersonalDataConsumer } from '../personalDataContext'\r\n\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        let githubImageLink = \"https://media.discordapp.net/attachments/658935195403026432/836824730459570196/github-logo_icon-icons.com_73546.png\";\r\n        let linkedinImageLink = \"https://media.discordapp.net/attachments/658935195403026432/837224939991990302/clipart2958481.png\";\r\n        let discordImageLink = \"https://media.discordapp.net/attachments/658935195403026432/837226050139324477/kisspng-discord-computer-icons-logo-clip-art-antopodis-logo-5aec73128661a7.0196443115254453945504.png\";\r\n        return (\r\n            <>\r\n                <div className=\"socialList\">\r\n                    <ul className=\"listItem\">\r\n                        <li>\r\n                            <InlineImageText imageLink={githubImageLink} text=\"\" width=\"24px\" height=\"24px\" />\r\n                        </li>\r\n                        <li>\r\n                            <InlineImageText imageLink={linkedinImageLink} text=\"\" width=\"24px\" height=\"24px\" />\r\n\r\n                        </li>\r\n                        <li>\r\n                            <InlineImageText imageLink={discordImageLink} text=\"\" width=\"29px\" height=\"29px\" />\r\n\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"homeHeadingContainer shiftRight\">\r\n\r\n                    <div>\r\n                        <h1 className=\"heading\">Hi, my name is</h1>\r\n                    </div>\r\n                    <div  >\r\n                        <h2 className=\"big-heading\">\r\n                            <PersonalDataConsumer>\r\n                                {\r\n                                    (JsonData) => {\r\n                                        return <span>\r\n                                            {JsonData.name}\r\n                                        </span>\r\n                                    }\r\n                                }\r\n                            </PersonalDataConsumer>\r\n                        </h2>\r\n                    </div>\r\n                    <div >\r\n                        <h3 className=\"big-heading\">I build things for the Desktop , Backend, Mobile , Web.</h3>\r\n                    </div>\r\n                    <div >\r\n                        <p className=\"homeStory\">I'm a Guwahati based software engineer who likes to in build System , Mobile , Web and embedded application.\r\n                            Currently, I'm finding for freelance or\r\n                            {/* <a className=\"link\" href=\"https://upstatement.com/\"> Upstatement </a>\r\n                                         focused on building accessible, human-centered products. */}\r\n                        </p>\r\n                    </div>\r\n                    <div >\r\n                        <NavLink to=\"/contact\">\r\n                            <button className=\"getInTouch\"  >Get In Touch</button>\r\n                        </NavLink>\r\n\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport \"./repoDivCard.css\"\r\n\r\nclass RepoDivCard extends Component {\r\n    render() {\r\n        let {Username, Repo} =this.props;\r\n        return (\r\n            \r\n            <>\r\n                <a href={\"https://github.com/\"+ Username +\"/\"+ Repo}>\r\n                     <img className=\"projimage\" src={\"https://github-readme-stats.vercel.app/api/pin/?username=\"+ Username+\"&repo=\"+ Repo } />\r\n                 </a>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RepoDivCard\r\n","import React, { Component } from 'react'\r\n\r\nclass Languages extends Component {\r\n    render() {\r\n        let language=this.props.name;\r\n            if(language === \"java\"){\r\n                return(  <div>\r\n                    <span className=\"lang java\">‍&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                    java\r\n                    </div> )\r\n            }else if(language === \"cpp\"){\r\n                return( <div>\r\n                    <span className=\"lang cpp\">‍&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                    cpp\r\n                    </div> )\r\n            }\r\n            else if(language === \"html\"){\r\n                return( <div>\r\n                    <span className=\"lang html\">‍&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                    html\r\n                    </div>)\r\n            }\r\n            else if(language === \"css\"){\r\n                return(  <div>\r\n                    <span className=\"lang css\">‍&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                    css\r\n                    </div> )\r\n            }\r\n            else if(language === \"php\"){\r\n                return(  <div>\r\n                    <span className=\"lang php\">‍&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                    php\r\n                    </div> )\r\n            }\r\n            else if(language === \"csharp\"){\r\n                return(  <div>\r\n                    <span className=\"lang csharp\">‍&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                    csharp\r\n                    </div> )\r\n            }else{\r\n                return(<div></div>)\r\n            }\r\n\r\n        \r\n    }\r\n}\r\n\r\nexport default Languages\r\n","import React, { Component } from 'react'\r\nimport \"./cardDiv.css\"\r\nimport Languages from './Languages'\r\nimport \"./projectLinks.css\"\r\n\r\nlet languages = [];\r\nclass CardDiv extends Component {\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        const languagelist = []\r\n        this.props.projLanguages.forEach((language) => {\r\n            languagelist.push(<Languages key={language} name={language} />)\r\n        })\r\n        return (\r\n            <div className=\"cardBlock\"> <div className=\"card\">\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"column grow1\">\r\n                        <div className=\"photo\">\r\n                            <img className=\"img\"\r\n                                src={this.props.projCoverImageLink} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"column grow2\">\r\n                        <div className=\"content\">\r\n                            <div className=\"header\">\r\n                                <h2>{this.props.projName}</h2>\r\n                            </div>\r\n                            <p>\r\n                                {this.props.projDescription}\r\n                            </p>\r\n                            <ul className=\"Projectslinks sizeSmallFont\">\r\n                                {/* <!--parent element--> */}\r\n                                <li ><a href={this.props.projExecutableLink}>executable</a></li>\r\n                                {/* <!--first child element--> */}\r\n                                <li> <a href={this.props.projSourceLink}>source</a> </li>\r\n                                {/* <!--second child element--> */}\r\n                                <li> <a href={this.props.projDocsLink}>docs</a> </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"column wrap grow1 sizeSmallFont\">\r\n                        Languages/library/Framework\r\n                </div>\r\n                    <div className=\"column wrap grow2 sizeSmallestFont\">\r\n                        {languagelist}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CardDiv","import React, { Component } from 'react'\r\nimport RepoDivCard from './RepoDivCard'\r\nimport CardDiv from './CardDiv'\r\n\r\n/**\r\n * read more about json\r\n * https://mkyong.com/javascript/how-to-access-json-object-in-javascript/#:~:text=Below%20is%20a%20JSON%20string.&text=To%20access%20the%20JSON%20object,%E2%80%9D%20or%20%E2%80%9C%5B%5D%E2%80%9D.\r\n */\r\n\r\nvar data = {\r\n    projectlist: [{\r\n        projectId: 1,\r\n        projectName: \"Offline Library Management System\",\r\n        projectDescription: \"⚪ Offline database 📚\",\r\n        projectLanguages: ['java', 'html', 'php'],\r\n        projectExecutableLink: \"React\",\r\n        projectSourceLink: \"\",\r\n        projectDocsLink: \"\",\r\n        projectCoverImageLink: \"https://media.discordapp.net/attachments/785143854705672223/843013010347261972/6c6a6a95e713d927ee884dbdd5f48283.png\"\r\n    },\r\n    {\r\n        projectId: 2,\r\n        projectName: \"Online Library Management System\",\r\n        projectDescription: \"🟢 online database  📚\",\r\n        projectLanguages: ['csharp', 'cpp', 'php'],\r\n        projectExecutableLink: \"React\",\r\n        projectSourceLink: \"\",\r\n        projectDocsLink: \"\",\r\n        projectCoverImageLink: \"https://media.discordapp.net/attachments/785143854705672223/843013010347261972/6c6a6a95e713d927ee884dbdd5f48283.png\"\r\n    }\r\n    ]\r\n};\r\nvar json = JSON.parse(JSON.stringify(data));\r\nclass ProjectRepo extends Component {\r\n    render() {\r\n        let username = \"DevFrogora\"\r\n        return (\r\n            <div >\r\n                <RepoDivCard Username={username} Repo=\"LibraryManagementSystem\" />\r\n                <RepoDivCard Username={username} Repo=\"OnlineLibraryManagementSystem\" />\r\n                <RepoDivCard Username={username} Repo=\"DiscordSwing\" />\r\n                <RepoDivCard Username={username} Repo=\"GUIForChatiingApplication\" />\r\n                <RepoDivCard Username={username} Repo=\"StructuredWebsiteInPhp\" />\r\n                <br />\r\n                {/* <CardDiv projName={json.projectlist[0].projectName}\r\n                    projDescription= {json.projectlist[0].projectDescription}\r\n                    projLanguages={json.projectlist[0].projectLanguages}\r\n                    projCoverImageLink={json.projectlist[0].projectCoverImageLink}\r\n                    projExecutableLink={json.projectlist[0].projectExecutableLink}\r\n                    projSourceLink={json.projectlist[0].projectSourceLink}\r\n                    projDocsLink={json.projectlist[0].projectDocsLink}\r\n                /> */}\r\n                 <h2>Non-Github Repo</h2>\r\n                <p>..............</p>\r\n                {json.projectlist.map(project => {\r\n\r\n                    return (\r\n                        <CardDiv key={project.projectId} projName={project.projectName}\r\n                            projDescription={project.projectDescription}\r\n                            projLanguages={project.projectLanguages}\r\n                            projCoverImageLink={project.projectCoverImageLink}\r\n                            projExecutableLink={project.projectExecutableLink}\r\n                            projSourceLink={project.projectSourceLink}\r\n                            projDocsLink={project.projectDocsLink}\r\n                        />\r\n                    )\r\n\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectRepo\r\n","import React, { Component } from 'react'\r\nimport InlineImageText from './Template/InlineImageText'\r\nimport ProjectRepo from './Projects/ProjectRepo'\r\nimport './Projects/projects.css'\r\nimport { PersonalDataConsumer } from '../personalDataContext'\r\n\r\nclass Projects extends Component {\r\n    render() {\r\n        // const githubRepoApi= https://api.github.com/repos/{username}/{reponame}\r\n        let githubImageLink=\"https://media.discordapp.net/attachments/658935195403026432/836824730459570196/github-logo_icon-icons.com_73546.png\";\r\n        let mailBoxImageLink=\"https://media.discordapp.net/attachments/658935195403026432/836885946670645268/Vector-Mailbox-Transparent-Background-PNG.png\";\r\n        let locationImageLink=\"https://media.discordapp.net/attachments/658935195403026432/836886495033425930/Daco_150510.png\"\r\n        return (\r\n            <div className=\"parent\">\r\n                <div className=\"split1 left\">\r\n                    <div className=\"centered\">\r\n                        <img className=\"logoImage\" src=\"https://media.discordapp.net/attachments/658935195403026432/836824740327850024/github_logo_icon_143772.png\" alt=\"Avatar woman\" />\r\n                        <h2 className=\"githubText\">Github</h2>\r\n                        <InlineImageText imageLink={githubImageLink} text=\"@github\" width=\"24px\" height=\"24px\" redirectLink=\"https://github.com/DevFrogora\"/>\r\n                        <PersonalDataConsumer>\r\n                                    {\r\n                                        (JsonData) => {\r\n                                            return <span>\r\n                                                <InlineImageText imageLink={mailBoxImageLink} text={JsonData.email} width=\"18px\" height=\"18px\"/>\r\n                                            </span>\r\n                                        }\r\n                                    }\r\n                                </PersonalDataConsumer>\r\n                        \r\n                        <InlineImageText imageLink={locationImageLink} text=\"Guwahati Assam , India\" width=\"18px\" height=\"18px\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"split2 right\">\r\n                    <div className=\"contentStyle shiftLeft\">\r\n                        <h2>My Projects</h2>\r\n                        <p>Github repositories that I've built.</p>\r\n                        <ProjectRepo />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Projects\r\n","import React, { Component } from 'react'\r\nimport experienceCss from \"./experienceLayout.module.css\"\r\nimport \"./reset.css\"\r\nlet jobsList = []\r\nlet buttonList = []\r\nlet data = {\r\n\r\n    companies: [{\r\n        id: 1,\r\n        companyName: \"Google\",\r\n        companySiteLink: \"\",\r\n        jobTitles: \"software engg 1\",\r\n        JoinTimeStamp: 213,\r\n        leaveTimeStamp: 12312,\r\n        jobs: [\"Google what you developed or achieved or worked 1\",\r\n            \"Google what you developed or achieved or worked 2\",\r\n            \"Google what you developed or achieved or worked 3\"]\r\n    }, {\r\n        id: 2,\r\n        companyName: \"MicroSoft\",\r\n        companySiteLink: \"\",\r\n        jobTitles: \"software engg 2\",\r\n        JoinTimeStamp: 213,\r\n        leaveTimeStamp: 12312,\r\n        jobs: [\"MicroSoft job1\", \" MicroSoft job2\", \" MicroSoft job3\"]\r\n\r\n    }, {\r\n        id: 3,\r\n        companyName: \"Infosys\",\r\n        companySiteLink: \"\",\r\n        jobTitles: \"software engg 3\",\r\n        JoinTimeStamp: 213,\r\n        leaveTimeStamp: 12312,\r\n        jobs: [\"Infosys job1\", \"Infosys job2\", \"Infosys job3\"]\r\n    }]\r\n\r\n}\r\nlet json = JSON.parse(JSON.stringify(data));\r\nclass ExperienceLayout extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            id: 1,\r\n            companyName: \"Infosys\",\r\n            companySiteLink: \"\",\r\n            jobTitles: \"software engg\",\r\n            JoinTimeStamp: 213,\r\n            leaveTimeStamp: 12312,\r\n            jobs: [],\r\n            buttonListState: [],\r\n            active: 1,\r\n\r\n        }\r\n    }\r\n\r\n    handleOnCompanySlect = (e) => {\r\n        let buttonValue = e.target.value;\r\n        while (jobsList.length) {\r\n            jobsList.pop();\r\n        }\r\n\r\n        {\r\n            json.companies.map(company => {\r\n                if (buttonValue === company.companyName) {\r\n                    this.setState({\r\n                        id: company.id,\r\n                        companyName: company.companyName,\r\n                        jobTitles: company.jobTitles,\r\n                        companySiteLink: company.companySiteLink,\r\n                        JoinTimeStamp: company.JoinTimeStamp,\r\n                        leaveTimeStamp: company.leaveTimeStamp,\r\n                        jobs: company.jobs\r\n                        // buttonListState: [],\r\n                    })\r\n                    company.jobs.forEach((job, index) => {\r\n                        jobsList.push(<li key={index} className={experienceCss.li}>{job}</li>)\r\n                    })\r\n                    this.setState({\r\n                        jobs: jobsList,\r\n                        active: company.id\r\n                    }, () => {\r\n                        //finished\r\n                        this.reLoadButtonList()\r\n                    })\r\n\r\n                }\r\n\r\n            })\r\n\r\n            console.log(this.state.active)\r\n\r\n\r\n\r\n        }\r\n    }\r\n\r\n    reLoadButtonList() {\r\n        console.log(\"reloadButton\")\r\n        while (buttonList.length) {\r\n            buttonList.pop();\r\n        }\r\n        json.companies.map((company) => {\r\n\r\n            buttonList.push(<button key={company.id} className={experienceCss.button}\r\n                className={this.state.active === company.id ? experienceCss.active : experienceCss.button}\r\n                onClick={this.handleOnCompanySlect}\r\n                value={company.companyName}>{company.companyName}</button>)\r\n\r\n        })\r\n\r\n        this.setState({\r\n            buttonListState: buttonList\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        while (buttonList.length) {\r\n            buttonList.pop();\r\n        }\r\n        while (jobsList.length) {\r\n            jobsList.pop();\r\n        }\r\n        json.companies.map((company) => {\r\n\r\n            buttonList.push(<button key={company.id} className={experienceCss.button}\r\n                className={this.state.active === company.id ? experienceCss.active : experienceCss.button}\r\n                onClick={this.handleOnCompanySlect}\r\n                value={company.companyName}>{company.companyName}</button>)\r\n\r\n        })\r\n\r\n        this.setState({\r\n            buttonListState: buttonList\r\n        })\r\n        json.companies.map(company => {\r\n            if (this.state.active === company.id) {\r\n                this.setState({\r\n                    id: company.id,\r\n                    companyName: company.companyName,\r\n                    jobTitles: company.jobTitles,\r\n                    companySiteLink: company.companySiteLink,\r\n                    JoinTimeStamp: company.JoinTimeStamp,\r\n                    leaveTimeStamp: company.leaveTimeStamp,\r\n                    jobs: company.jobs\r\n                    // buttonListState: [],\r\n                })\r\n                company.jobs.forEach((job, index) => {\r\n                    jobsList.push(<li key={index+1} className={experienceCss.li}>{job}</li>)\r\n                })\r\n                this.setState({\r\n                    jobs: jobsList,\r\n                    active: company.id\r\n                }, () => {\r\n                    //finished\r\n                    console.log(\"componentDIdMount\")\r\n                    this.reLoadButtonList()\r\n                })\r\n\r\n            }\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        if(json.companies.length){\r\n            return (\r\n                <div>\r\n                    <div className={experienceCss.cardBlock}>\r\n                        <div className={experienceCss.card}>\r\n    \r\n                            <div className={experienceCss.row}>\r\n                                <div className={`${experienceCss.column} ${experienceCss.grow1}`}>\r\n                                    <div className={experienceCss.companyName}>\r\n                                        \r\n                                        {this.state.buttonListState}\r\n                                    </div>\r\n                                </div>\r\n                                <div className={`${experienceCss.column} ${experienceCss.grow2}`}>\r\n                                    <div className={experienceCss.content}>\r\n                                        <div className={experienceCss.header}>\r\n                                            <h2 > {this.state.jobTitles} <a  className={experienceCss.siteLink} href={this.state.companySiteLink}> @ {this.state.companyName} </a> </h2>\r\n                                            <span className={experienceCss.timestamp}> {this.state.JoinTimeStamp} - {this.state.leaveTimeStamp}</span>\r\n                                        </div>\r\n                                        <ul className={`${experienceCss.Projectslinks} ${experienceCss.sizeSmallFont}`}>\r\n                                            {/* <li className={experienceCss.li}>what you developed or achieved or worked</li>\r\n                                            <li className={experienceCss.li}>what you developed or achieved or worked</li>\r\n                                            <li className={experienceCss.li}>what you developed or achieved or worked</li> */}\r\n                                            {this.state.jobs}\r\n                                            {/* {this.state.active} */}\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(<div>Locked</div>)\r\n        }\r\n       \r\n    }\r\n}\r\n\r\nexport default ExperienceLayout\r\n","import React, { Component } from 'react'\r\nimport { PersonalDataConsumer } from '../personalDataContext'\r\nimport ExperienceLayout from './Experience/ExperienceTemplate/ExperienceLayout'\r\n\r\nclass Experience extends Component {\r\n    \r\n    render() {\r\n        // var obj =[];\r\n        return (\r\n            <div>\r\n                <ExperienceLayout />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Experience\r\n\r\n\r\n// No Experience\r\n// {/* <ServletGetRequest /> */}\r\n// <PersonalDataConsumer>\r\n//     {\r\n//         (JsonData) =>{\r\n//          return <div>\r\n//          Name : {JsonData.name} <br/>\r\n//          Email : {JsonData.email}\r\n//           </div> \r\n//         }\r\n//     }\r\n// </PersonalDataConsumer>","import React, { PureComponent } from 'react'\r\nimport \"./contact.css\"\r\nimport axios from 'axios'\r\n\r\n\r\nclass ContactMetaData extends PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            totalCount: 0,\r\n            pendingCount: 0,\r\n            falseCount: 0,\r\n            canContact: \"yes\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //   setInterval(()=>{\r\n\r\n        axios.get('http://localhost:8080/FirstServlet/getContactData')\r\n            .then(response => {\r\n                let respObj = response.data;\r\n                    this.setState({\r\n                        totalCount: respObj.totalCount,\r\n                        pendingCount: respObj.pendingCount,\r\n                        falseCount: respObj.falseCount,\r\n                        canContact: respObj.canContact\r\n                    })\r\n            })\r\n            .catch(e => console.log(e))\r\n        //  },2000)\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setState({\r\n            mounted: false\r\n        })\r\n    }\r\n\r\n\r\n\r\n    handleOnChange = () => {\r\n        setTimeout(() => {\r\n            axios.get('http://localhost:8080/FirstServlet/getContactData')\r\n                .then(response => {\r\n                    let respObj = response.data;\r\n                    console.log(\"run from handleOnChnage on Button submit\")\r\n\r\n                    this.setState({\r\n                        totalCount: respObj.totalCount,\r\n                        pendingCount: respObj.pendingCount,\r\n                        falseCount: respObj.falseCount,\r\n                        canContact: respObj.canContact\r\n                    })\r\n\r\n                })\r\n                .catch(e => console.log(e))\r\n        }, 3000);\r\n    }\r\n\r\n    render() {\r\n        console.log(\"ContactMetaData--Render --updated\");\r\n        return (\r\n\r\n            <div>\r\n                <div className=\"metaData_List\" >\r\n                    <div className=\"metaData_container\">\r\n                        <span className=\"metaData_key\">Total Message</span>\r\n                        <span className=\"metaData_value\"> {this.state.totalCount} </span>\r\n                    </div>\r\n                    <div className=\"metaData_container\">\r\n                        <span className=\"metaData_key\">Pending Message</span>\r\n                        <span className=\"metaData_value\"> {this.state.pendingCount} </span>\r\n                    </div>\r\n                    <div className=\"metaData_container\">\r\n                        <span className=\"metaData_key\">Can Contact ? </span>\r\n                        <span className=\"metaData_value\"> {this.state.canContact} </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactMetaData\r\n","import React, { Component } from 'react'\r\nimport ContactMetaData from './Contact/ContactMetaData'\r\nimport \"./Contact/contactForm.css\"\r\nimport axios from 'axios'\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.child = React.createRef();\r\n        this.state = {\r\n            username: '',\r\n            email: '',\r\n            message: '',\r\n            message_type: '',\r\n            form_status: '',\r\n            form_status_message: '',\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleUsernameChange = (event) => {\r\n        this.setState({\r\n            username: event.target.value\r\n\r\n        })\r\n    }\r\n\r\n    handleEmailChange = (event) => {\r\n        this.setState({\r\n            email: event.target.value\r\n        })\r\n    }\r\n\r\n    handleMessageChange = (event) => {\r\n        this.setState({\r\n            message: event.target.value\r\n        })\r\n    }\r\n\r\n    handleMsgTypeChange = (event) => {\r\n        this.setState({\r\n            message_type: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n            //            && typeof (this.state.message_priority) != \"undefined\"\r\n        if (this.state.username !=='' && this.state.email !==''\r\n\r\n            && this.state.message !== '' && this.state.message_type !== '') {\r\n\r\n            alert(`${this.state.username} ${this.state.email} ${this.state.message} ${this.state.message_type}`)\r\n                console.log(this.state);\r\n            this.setState(prevState => ({\r\n                // form_status: '',\r\n                form_status: 'form_status_success',\r\n                form_status_message: 'send done'\r\n\r\n            }))\r\n\r\n            var config = {\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n            };\r\n\r\n            let data= {\r\n                username : this.state.username,\r\n                email : this.state.email,\r\n                message : this.state.message,\r\n                message_type : this.state.message_type\r\n                }\r\n            \r\n            console.log(data)\r\n            axios.post('http://localhost:8080/FirstServlet/setContactData', data, config)\r\n            .then(response => {\r\n                // console.log(response.data)\r\n                // console.log(this.state)\r\n\r\n            })\r\n            .catch(e => console.log(e))\r\n             event.preventDefault();\r\n\r\n        } else {\r\n            event.preventDefault();\r\n            alert('empty');\r\n            this.setState(prevState => ({\r\n                // form_status: '',\r\n                form_status: 'form_status_failed',\r\n                form_status_message: 'send failed'\r\n            }))\r\n            console.log(`${this.state.form_status_message}`)\r\n        }\r\n    }\r\n\r\n    handleToRefresh = () => {\r\n        this.child.current.handleOnChange();\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(\"Contact Parent data\");\r\n\r\n        return (\r\n            <div >\r\n                <p className=\"my_message\">\r\n                    <span>\r\n                        My inbox is always open. Whether you have a question or just want to say hi, I'll try my best to get back to you!\r\n                    </span>\r\n                </p>\r\n                <ContactMetaData   ref={this.child} />\r\n                <div className=\"form_container\">\r\n                    <form onSubmit={this.handleSubmit} > \r\n                        <div>\r\n                            <div className=\"form_username\">\r\n                                <input\r\n                                    placeholder=\"UserName\"\r\n                                    type=\"text\"\r\n                                    value={this.state.username}\r\n                                    onChange={this.handleUsernameChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form_email\">\r\n                                <input\r\n                                    placeholder=\"Email\"\r\n                                    type=\"email\"\r\n                                    value={this.state.email}\r\n                                    onChange={this.handleEmailChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form_message\">\r\n                                <textarea\r\n                                    placeholder=\"message\"\r\n                                    value={this.state.message}\r\n                                    onChange={this.handleMessageChange}>\r\n                                </textarea>\r\n                            </div>\r\n                            <div className=\"form_status\">\r\n                                <div className={this.state.form_status === \"form_status_success\" ? \"form_status_success\" : \"form_status_failed\"}>\r\n                                    {this.state.form_status_message}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form_msgtype\">\r\n                                <label className=\"form_msgtype_lable\" > Message Type </label>\r\n                                <select value={this.state.message_type} onChange={this.handleMsgTypeChange}\r\n                                    className=\"form_msgtype_selector\">\r\n                                    <option value=\"Urgent\">Urgent</option>\r\n                                    <option value=\"Hiring\">Hiring</option>\r\n                                    <option value=\"Greeting\">Greeting</option>\r\n                                    <option value=\"Spam\">Spamming</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"submit_btn\" type=\"submit\" onClick={this.handleToRefresh}>Submit</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact\r\n","import React, { Component } from 'react'\r\nimport './Resume/ResumeTable.css'\r\nclass Resume extends Component {\r\n    handleDownloadingPDF = (event) => {\r\n        window.print();\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <table>\r\n                    <tr className=\"Heading\">\r\n                        <td className=\"TopColumn\">\r\n                            <b> Ruhit Rai </b>  <br />\r\n                            BCA <br />\r\n                            Asian Institute of Management and Technology\r\n                        </td>\r\n                        <td>\r\n                            Phone - +91-96xxxxxxxx <br />\r\n                            Email - ruhitray@gmail.com <br />\r\n                            Address : 51A, Narengi Tiniali , Guwahti , Assam - 781026\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"Education resumeSection\" >\r\n                        <td colspan=\"2\">\r\n                            <h3>  <b> Education  </b> </h3>\r\n                            <table className=\"interTable\">\r\n                                <tr>\r\n                                    <td className=\"TopColumn\">\r\n                                        2017-20\r\n                                    </td>\r\n                                    <td>\r\n                                        Bachelor of Computer And Technology <br />\r\n                                        Asian Institute of Management and Technology\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"resumeSection\">\r\n                        <td colspan=\"2\">\r\n                            <h3>  <b> Technical Skills  </b> </h3>\r\n                            <table >\r\n                                <tr>\r\n                                    <td className=\"TopColumn\">\r\n                                        Languages\r\n                                    </td>\r\n                                    <td>\r\n                                        C,C++,Java,C#\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"TopColumn\">\r\n                                        Web\r\n                                    </td>\r\n                                    <td>\r\n                                        PHP,MySQL,HTML,CSS,JavaScript\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"TopColumn\">\r\n                                        Technology\r\n                                    </td>\r\n                                    <td>\r\n                                        Git,Docker\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"resumeSection\">\r\n                        <td colspan=\"2\">\r\n                            <h3>  <b> Academic Projects  </b> </h3>\r\n                            <table >\r\n                                <tr>\r\n                                    <td className=\"TopColumn\">\r\n                                        feb-jun 18\r\n                                    </td>\r\n                                    <td>\r\n                                        <b>Library Management System Offline</b> ( BCA Project, 4th Semester) <br />\r\n                                        ➡ Used to store book and member details as well as Borrow & Return Records <br />\r\n                                        ➡ Technology : Java (Swing For GUI), Mysql (For DB) <br />\r\n                                        ➡ Platform : Cross Platform\r\n                                    </td>\r\n\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className=\"TopColumn\">\r\n                                        Aug-dec 20\r\n                                    </td>\r\n                                    <td>\r\n                                        <b>Library Management System Online</b> ( BCA Project, 6th Semester) <br />\r\n                                        ➡ Used to store book and member details as well as Borrow & Return Records <br />\r\n                                        ➡ Technology : Java (Swing For GUI), Mysql (For DB) ,PHP <br />\r\n                                        ➡ Platform : Cross Platform <br />\r\n                                        ➡ Addition : Android Application to access details about Members\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </table>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            <button onClick={this.handleDownloadingPDF}>Download As PDF</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resume\r\n","import axios from 'axios'\r\n\r\nlet JsonData ;\r\n\r\nconst request = new XMLHttpRequest();\r\nrequest.addEventListener('readystatechange', () => {\r\n    if(request.readyState === 4){\r\n        console.log(request.responseText)\r\n         return request.responseText;\r\n    }\r\n})\r\nfunction sendRequest() {\r\n     \r\n    request.open('GET','http://localhost:8080/FirstServlet/pqr');\r\n    request.send();\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport  {sendRequest}\r\n","import React, { Component } from 'react'\r\nimport \"./css/TextBox.css\"\r\n\r\nclass TextBoxWithInputField extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             name:\"\",\r\n             email:\"\",\r\n             currentWorking:''\r\n        }\r\n    }\r\n    \r\n    handleOnChange = (e)=>{\r\n            this.props.setStateOfParent(e)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"textbox_container\" >\r\n                    <span className=\"textbox_name\">{this.props.text} : </span>\r\n                    {/* <input  className=\"textbox_name\" type=\"text\" readonly=\"readonly\" value={this.props.text} /> */}\r\n                    <input className=\"textbox_feild\" value={this.props.value} onChange={this.handleOnChange}\r\n                            name ={this.props.name}></input>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TextBoxWithInputField\r\n","import React, { Component } from 'react'\r\nimport TextBoxWithInputField from './TextBoxWithInputField'\r\nimport axios from 'axios'\r\nimport \"./css/adminSetting.css\"\r\nimport PersonalDataContext, { PersonalDataConsumer } from '../../personalDataContext'\r\n\r\nclass MyDataConfig extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            currentWorking: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let jsonObject = this.context\r\n        this.setState({\r\n            name: jsonObject.name,\r\n            email: jsonObject.email,\r\n            currentWorking: jsonObject.currentWorking\r\n        })\r\n\r\n    }\r\n\r\n    handleOnClick = (e) => {\r\n        // alert(`${this.state.name} ${this.state.email} ${this.state.currentWorking}`)\r\n        if (this.state.name != '' && this.state.email != ''\r\n            && this.state.currentWorking != '') {\r\n            // axios(options);\r\n            var config = {\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n            };\r\n\r\n            axios.post('http://localhost:8080/FirstServlet/setPersonalData', this.state, config)\r\n                .then(response => {\r\n                    // console.log(response.data)\r\n                    // console.log(this.state)\r\n                })\r\n                .catch(e => console.log(e))\r\n            e.preventDefault();\r\n        } else {\r\n            e.preventDefault();\r\n            alert('wrong');\r\n            // console.log(`${this.state.form_status_message}`)\r\n        }\r\n    }\r\n\r\n    setStateOfParent = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"config_List\">\r\n                    <div className=\"config_Item\"> <TextBoxWithInputField text=\"Name\" value={this.state.name}\r\n                        name=\"name\" setStateOfParent={this.setStateOfParent} /> </div>\r\n                    <div className=\"config_Item\"> <TextBoxWithInputField text=\"Email\" value={this.state.email}\r\n                        name=\"email\" setStateOfParent={this.setStateOfParent} /> </div>\r\n                    <div className=\"config_Item\"> <TextBoxWithInputField text=\"CurrentWorking\" value={this.state.currentWorking}\r\n                        name=\"currentWorking\" setStateOfParent={this.setStateOfParent} /> </div>\r\n                    <button onClick={this.handleOnClick} >Save</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nMyDataConfig.contextType = PersonalDataContext\r\n\r\nexport default MyDataConfig\r\n","import React, { Component } from 'react'\r\nimport \"./css/messageTemplate.css\"\r\nimport axios from 'axios'\r\n\r\n\r\nclass MessageTemplate extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            date: ''\r\n        }\r\n    }\r\n\r\n    handleOnDone = (e) => {\r\n        let data = {\r\n            date: this.state.date\r\n        }\r\n        console.log(data)\r\n\r\n        var config = {\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n        };\r\n\r\n        axios.post('http://localhost:8080/FirstServlet/SetContactDone', data, config)\r\n            .then(response => {\r\n                // console.log(response.data)\r\n                // console.log(this.state)\r\n                console.log(\"done\")\r\n                this.props.Refresh();\r\n            })\r\n            .catch(e => console.log(e))\r\n        e.preventDefault();\r\n\r\n    }\r\n\r\n    handleOnDelete = (e) => {\r\n        let data = {\r\n            date: this.state.date\r\n        }\r\n        console.log(data)\r\n\r\n        var config = {\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n        };\r\n\r\n        axios.post('http://localhost:8080/FirstServlet/SetContactDelete', data, config)\r\n            .then(response => {\r\n                console.log(\"deleted \",this.state.date)\r\n                this.props.Refresh();\r\n            })\r\n            .catch(e => console.log(e))\r\n        e.preventDefault();\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            date: this.props.TimeStamp\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"message_container\">\r\n                    <div className=\"message_header\">\r\n                        <div className=\"message_username\"> {this.props.Username}</div>\r\n                        <div className=\"message_date\"> {this.props.Date}</div>\r\n                    </div>\r\n                    {/* {console.log(this.props.TimeStamp)} */}\r\n                    <div className=\"message_body\">\r\n                        <div className=\"message_data\"> {this.props.Message}</div>\r\n                        <div className=\"message_operation\">\r\n                            <button className=\"message_done\" onClick={this.handleOnDone}>Done</button>\r\n                            <button className=\"message_delete\" onClick={this.handleOnDelete}>Delete</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageTemplate\r\n","import React, { Component } from 'react'\r\nimport MessageTemplate from './MessageTemplate'\r\nimport axios from 'axios'\r\n\r\n\r\nclass ContactMessages extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            links: [],\r\n            pending: 'true'\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:8080/FirstServlet/getContactDataInAdmin')\r\n            .then(response => {\r\n                console.log(response.data)\r\n                this.setState({\r\n                    links: response.data\r\n                })\r\n            })\r\n            .catch(e => console.log(e))\r\n\r\n    }\r\n\r\n    handleOnRefresh = () => {\r\n        axios.get('http://localhost:8080/FirstServlet/getContactDataInAdmin')\r\n            .then(response => {\r\n                console.log(response.data)\r\n                this.setState({\r\n                    links: response.data\r\n                })\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    handleOnToggleShow = () => {\r\n        if (this.state.pending === 'true') {\r\n            this.setState({\r\n                pending: 'false'\r\n            })\r\n        } else {\r\n            this.setState({\r\n                pending: 'true'\r\n            })\r\n        }\r\n        this.handleOnRefresh();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <button onClick={this.handleOnRefresh}>Refresh</button>\r\n                <button onClick={this.handleOnToggleShow}> Pending : {this.state.pending}</button>\r\n                {this.state.links.map(link => {\r\n                    if (this.state.pending === 'true') {\r\n                        if (link.pending) {\r\n                            let date = new Date(link.date)\r\n                            let dateTimeString = date.toLocaleDateString('en-GB') + \" \" + date.toLocaleTimeString()\r\n                            return (<MessageTemplate key={link.date} Username={link.username} Date={dateTimeString} Message={link.message} TimeStamp={link.date} Refresh={this.handleOnRefresh} />)\r\n                        }\r\n                    } else {\r\n                        if (!link.pending) {\r\n                            let date = new Date(link.date)\r\n                            let dateTimeString = date.toLocaleDateString('en-GB') + \" \" + date.toLocaleTimeString()\r\n                            return (<MessageTemplate key={link.date} Username={link.username} Date={dateTimeString} Message={link.message} TimeStamp={link.date} Refresh={this.handleOnRefresh} />)\r\n                        }\r\n                    }\r\n\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactMessages\r\n","import React, { Component } from 'react'\r\nimport \"./css/canContact.css\"\r\nimport axios from 'axios'\r\n\r\nclass CanContact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isChecked: true,\r\n            answer: 'yes'\r\n        };\r\n    }\r\n\r\n    toggleChange = () => {\r\n        this.setState({\r\n            isChecked: !this.state.isChecked,\r\n        }, () => {\r\n            if (this.state.isChecked) {\r\n                console.log(\"yes can Contact\")\r\n                this.setState({\r\n                    isChecked: true,\r\n                    answer: 'yes',\r\n                });\r\n\r\n                this.postReq(\"yes\");\r\n            } else {\r\n                this.setState({\r\n                    isChecked: false,\r\n                    answer: 'no',\r\n                });\r\n                this.postReq(\"no\");\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:8080/FirstServlet/getContactOrNot')\r\n            .then(response => {\r\n                let respObj = response.data;\r\n                console.log(respObj)\r\n                if (respObj === 'yes') {\r\n                    this.setState({\r\n                        isChecked: true,\r\n                        answer: 'yes'\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        isChecked: false,\r\n                        answer: 'no'\r\n                    });\r\n                }\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    postReq = (setData) => {\r\n        let data = {\r\n            contact: setData\r\n        }\r\n        console.log(data)\r\n\r\n        var config = {\r\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n        };\r\n\r\n        axios.post('http://localhost:8080/FirstServlet/SetContactOrNot', data, config)\r\n            .then(response => {\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <label>Can Contact ?----\r\n                <input type=\"checkbox\"\r\n                    defaultChecked={this.state.isChecked}\r\n                    onChange={this.toggleChange}\r\n                />\r\n                {this.state.answer}\r\n            </label>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CanContact\r\n","import React, { Component } from 'react'\r\nimport TextBoxWithInputField from './TextBoxWithInputField'\r\nimport axios from 'axios'\r\nimport \"./css/adminSetting.css\"\r\nimport PersonalDataContext, { PersonalDataConsumer } from '../../personalDataContext'\r\nimport MyDataConfig from './MyDataConfig'\r\nimport ContactMessages from './ContactMessages'\r\nimport CanContact from './CanContact'\r\n\r\nclass AdminSetting extends Component {\r\n\r\n    render() {\r\n        // const { name, email, currentWorking } = this.state;\r\n        return (\r\n            <div>\r\n                Admin Page\r\n                <br />\r\n                <span className=\"config_header\">Set the config. </span><br />\r\n                <div className=\"setting_list\">\r\n                   <MyDataConfig/> \r\n                </div>\r\n                \r\n                <br/>\r\n                <span className=\"config_header\"> Contact Messages </span><br />\r\n                <CanContact />\r\n                <div className=\"contact_list\">\r\n                   <ContactMessages/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AdminSetting\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport AdminSetting from './AdminSetting'\r\n\r\nclass Admin extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            result:''\r\n        }\r\n    }\r\n\r\n    handleUsernameChange = (event) => {\r\n        this.setState({\r\n            username: event.target.value\r\n        })\r\n    }\r\n\r\n    handlePasswordChange = (event) => {\r\n        this.setState({\r\n            password: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        if (this.state.username != '' && this.state.password != '') {\r\n            // axios(options);\r\n            var config = {\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\r\n              };\r\n\r\n            axios.post('http://localhost:8080/FirstServlet/verifypassword', this.state, config)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                console.log(this.state)\r\n                this.setState({\r\n                     result: response.data //jsonObject\r\n                })\r\n\r\n                console.log(this.state.result)\r\n\r\n            })\r\n            .catch(e => console.log(e))\r\n            \r\n\r\n            event.preventDefault();\r\n        } else {\r\n            event.preventDefault();\r\n            alert('wrong');\r\n            console.log(`${this.state.form_status_message}`)\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if(this.state.result === true ) {\r\n            return(\r\n                <AdminSetting />\r\n            )\r\n        }else{\r\n            return (\r\n                <div>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label>UserName</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            value={this.state.username}\r\n                            onChange={this.handleUsernameChange} >\r\n                        </input><br />\r\n                        <label>Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            value={this.state.password}\r\n                            onChange={this.handlePasswordChange}  >\r\n                        </input><br />\r\n                        <button type=\"submit\">Login </button>\r\n                    </form>\r\n                </div>\r\n            )\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default Admin\r\n","import React, { Component  } from \"react\";\r\nimport \"./App.css\"\r\n\r\n// import NameList from \"./components/NameList\";\r\n// import Stylessheet from \"./components/Stylessheet\";\r\n// import styles from \"./appStyles.module.css\"\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\r\nimport Navbar from \"./components/Navbar\";\r\nimport About from \"./components/pages/About\";\r\nimport Home from \"./components/pages/Home\";\r\nimport Projects from \"./components/pages/Projects\";\r\nimport Experience from \"./components/pages/Experience\";\r\nimport Contact from \"./components/pages/Contact\";\r\nimport Resume from \"./components/pages/Resume\";\r\nimport { PersonalDataProvider } from \"./components/personalDataContext\";\r\nimport \"./components/pages/httpRequest/ServletGetRequest\"\r\n// import {sendRequest} from \"./components/pages/httpRequest/ServletGetRequest.js\";\r\nimport axios from 'axios'\r\nimport Admin from \"./components/pages/adminpanel/Admin\";\r\n\r\n\r\n// let Data;\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            PersonalDetails: [] //jsonObject in array\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //    var PersonalDetails = new ServletGetRequest();\r\n        //    let JsonData = PersonalDetails.sendRequest()\r\n        //    console.log(JsonData)\r\n        //    Data= JsonData;\r\n        //    this.setState({\r\n        //        PersonalDetails: JsonData\r\n        //    })\r\n        //    console.log(\"App:  \"+Data)\r\n        //    alert(\"checking\")\r\n\r\n        axios.get('http://localhost:8080/FirstServlet/pqr')\r\n            .then(response => {\r\n                console.log(response.data)\r\n                // Data = JSON.stringify(response.data); //json string\r\n                this.setState({\r\n                    PersonalDetails: response.data //jsonObject\r\n                })\r\n            })\r\n            .catch(e => console.log(e))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div className=\"App\">\r\n                    <PersonalDataProvider value={this.state.PersonalDetails}>\r\n                        <Navbar />\r\n                        <Switch>\r\n                            <Route path=\"/dev_porfolio\" exact component={Home} />\r\n                            <Route path=\"/about\" component={About} />\r\n                            <Route path=\"/experience\" component={Experience} />\r\n                            <Route path=\"/projects\" component={Projects} />\r\n                            <Route path=\"/contact\" component={Contact} />\r\n                            <Route path=\"/resume\" component={Resume} />\r\n                            <Route path=\"/admin\" component={Admin} />\r\n                        </Switch>\r\n                    </PersonalDataProvider>\r\n                </div>\r\n            </Router>\r\n        );\r\n        // you can use JSX instead \r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render( <App />,document.getElementById(\"root\"));\n"],"sourceRoot":""}